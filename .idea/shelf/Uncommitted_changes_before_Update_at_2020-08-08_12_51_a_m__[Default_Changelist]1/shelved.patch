Index: src/frontend/panels/admin_panel/admin_subpanels/OverviewPanel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package frontend.panels.admin_panel.admin_subpanels;\r\n\r\nimport backend.exceptions.AuthorizationException;\r\nimport backend.exceptions.TradableItemNotFoundException;\r\nimport backend.exceptions.UserNotFoundException;\r\nimport backend.tradesystem.admin_managers.HandleFrozenManager;\r\nimport backend.tradesystem.admin_managers.HandleItemRequestsManager;\r\nimport backend.tradesystem.queries.ItemQuery;\r\nimport backend.tradesystem.queries.UserQuery;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\n\r\n\r\n/**\r\n * Shows the overview of what an admin can do such as freezing an account\r\n */\r\npublic class OverviewPanel extends JPanel {\r\n\r\n    private JPanel itemRequestsContainer,\r\n            unFreezeRequestsContainer, freezeTradersContainer;\r\n    private final JPanel itemRequestsHeader, unFreezeRequestsHeader, freezeTradersHeader;\r\n    private final Font regular, bold, italic, boldItalic;\r\n    private final UserQuery userQuery = new UserQuery();\r\n    private final ItemQuery itemQuery = new ItemQuery();\r\n    private final HandleItemRequestsManager itemRequestManager = new HandleItemRequestsManager();\r\n    private final HandleFrozenManager frozenManager = new HandleFrozenManager();\r\n\r\n    private final Color bg = new Color(51, 51, 51);\r\n    private final Color blue = new Color(0, 240, 239);\r\n    private final Color gray = new Color(142, 142, 142);\r\n    private final Color confirmButton = new Color(27, 158, 36);\r\n    private final Color red = new Color(219, 58, 52);\r\n\r\n    /**\r\n     * Makes an overview panel\r\n     *\r\n     * @param adminId    the admin id\r\n     * @param regular    regular font\r\n     * @param bold       bold font\r\n     * @param italic     italics font\r\n     * @param boldItalic bold italics font\r\n     * @throws IOException if issues with getting database files\r\n     */\r\n    public OverviewPanel(String adminId, Font regular, Font bold, Font italic, Font boldItalic) throws IOException {\r\n        this.regular = regular;\r\n        this.bold = bold;\r\n        this.italic = italic;\r\n        this.boldItalic = boldItalic;\r\n\r\n        this.setBorder(BorderFactory.createEmptyBorder(25, 0, 0, 25));\r\n        this.setBackground(Color.BLACK);\r\n\r\n\r\n        JPanel itemRequestsTitleContainer = makeItemRequestsTitleContainer();\r\n\r\n        makeItemRequestsTitle(itemRequestsTitleContainer);\r\n\r\n        JButton acceptAllItemRequestsButton = makeDoAllButton(itemRequestsTitleContainer, \"Accept All\", Color.black);\r\n\r\n        GridBagConstraints gbc = new GridBagConstraints();\r\n\r\n        JPanel itemRequests = new JPanel(new GridBagLayout());\r\n        gbc.fill = GridBagConstraints.BOTH;\r\n        gbc.gridy = 0;\r\n        gbc.weighty = 0.1;\r\n        itemRequests.add(itemRequestsTitleContainer, gbc);\r\n        itemRequestsHeader = new JPanel(new GridLayout(1, 5, 25, 0));\r\n        setupItemRequestsHeader(gbc, itemRequests);\r\n\r\n        getAllItemRequests();\r\n        JScrollPane itemRequestsScrollPane = new JScrollPane(itemRequestsContainer);\r\n        itemRequestsScrollPane.setPreferredSize(new Dimension(1200, 325));\r\n        itemRequestsScrollPane.setBorder(null);\r\n        gbc.insets = new Insets(0, 0, 0, 0);\r\n        gbc.gridy = 2;\r\n        gbc.weighty = 0.8;\r\n        itemRequests.add(itemRequestsScrollPane, gbc);\r\n\r\n        JPanel frozenTraderTitleContainer = new JPanel(new GridLayout(1, 4, 50, 0));\r\n        frozenTraderTitleContainer.setOpaque(false);\r\n        frozenTraderTitleContainer.setPreferredSize(new Dimension(1200, 75));\r\n\r\n        setupFreezeTitle(frozenTraderTitleContainer, \"Un-freeze Requests\");\r\n\r\n        JButton unFreezeAllTradersButton = makeDoAllButton(frozenTraderTitleContainer, \"Un-freeze All\", Color.BLACK);\r\n\r\n        setupFreezeTitle(frozenTraderTitleContainer, \"To-be-frozen Users\");\r\n\r\n        JButton freezeAllTradersButton = makeDoAllButton(frozenTraderTitleContainer, \"Freeze All\", Color.BLACK);\r\n\r\n        gbc = new GridBagConstraints();\r\n        JPanel unFreezeRequests = new JPanel(new GridBagLayout());\r\n\r\n        unFreezeRequestsHeader = new JPanel(new GridLayout(1, 5, 25, 0));\r\n        unFreezeRequestsHeader.setBackground(bg);\r\n        unFreezeRequestsHeader.setBorder(BorderFactory.createEmptyBorder(0, 25, 0, 80));\r\n        unFreezeRequestsHeader.setPreferredSize(new Dimension(575, 25));\r\n        addUnFreezeRequestsHeader();\r\n        gbc.fill = GridBagConstraints.BOTH;\r\n        gbc.insets = new Insets(0, 0, 1, 0);\r\n        gbc.gridx = 0;\r\n        gbc.gridy = 0;\r\n        gbc.weighty = 0.1;\r\n        unFreezeRequests.add(unFreezeRequestsHeader, gbc);\r\n\r\n        getAllUnFreezeRequests();\r\n        handleFreezeTradersScrollPane(gbc, unFreezeRequests, unFreezeRequestsContainer);\r\n\r\n        JPanel freezeTraders = new JPanel(new GridBagLayout());\r\n\r\n        freezeTradersHeader = new JPanel(new GridLayout(1, 5, 25, 0));\r\n        handleFreezeTradersHeader(gbc, freezeTraders);\r\n\r\n        getAllToBeFrozenUsers();\r\n        handleFreezeTradersScrollPane(gbc, freezeTraders, freezeTradersContainer);\r\n\r\n        JPanel bottomSplitContainer = handleBottomSplitPanel(unFreezeRequests, freezeTraders);\r\n\r\n        this.add(itemRequests);\r\n        this.add(frozenTraderTitleContainer);\r\n        this.add(bottomSplitContainer);\r\n\r\n        handleButtonPress(acceptAllItemRequestsButton, unFreezeAllTradersButton, freezeAllTradersButton);\r\n\r\n    }\r\n\r\n    private JPanel handleBottomSplitPanel(JPanel unFreezeRequests, JPanel freezeTraders) {\r\n        JPanel bottomSplitContainer = new JPanel(new GridLayout(1, 2, 50, 0));\r\n        bottomSplitContainer.setPreferredSize(new Dimension(1200, 300));\r\n        bottomSplitContainer.setBackground(Color.BLACK);\r\n        bottomSplitContainer.add(unFreezeRequests);\r\n        bottomSplitContainer.add(freezeTraders);\r\n        return bottomSplitContainer;\r\n    }\r\n\r\n    private void handleFreezeTradersScrollPane(GridBagConstraints gbc, JPanel freezeTraders, JPanel freezeTradersContainer) {\r\n        JScrollPane freezeTradersScrollPane = new JScrollPane(freezeTradersContainer);\r\n        freezeTradersScrollPane.setBorder(null);\r\n        freezeTradersScrollPane.setPreferredSize(new Dimension(575, 274));\r\n        gbc.insets = new Insets(0, 0, 0, 0);\r\n        gbc.gridy = 1;\r\n        gbc.weighty = 0.9;\r\n        freezeTraders.add(freezeTradersScrollPane, gbc);\r\n    }\r\n\r\n    private void handleFreezeTradersHeader(GridBagConstraints gbc, JPanel freezeTraders) {\r\n        freezeTradersHeader.setBackground(bg);\r\n        freezeTradersHeader.setBorder(BorderFactory.createEmptyBorder(0, 25, 0, 80));\r\n        freezeTradersHeader.setPreferredSize(new Dimension(575, 25));\r\n        addFreezeTradersHeader();\r\n        gbc.insets = new Insets(0, 0, 1, 0);\r\n        gbc.gridy = 0;\r\n        gbc.weighty = 0.1;\r\n        freezeTraders.add(freezeTradersHeader, gbc);\r\n    }\r\n\r\n    private void handleButtonPress(JButton acceptAllItemRequestsButton, JButton unFreezeAllTradersButton, JButton freezeAllTradersButton) {\r\n        acceptAllItemRequestsButton.addActionListener(e -> {\r\n            for (Component itemRequest : itemRequestsContainer.getComponents()) {\r\n                for (Component c : ((JPanel) itemRequest).getComponents()) {\r\n                    if (c instanceof JButton && c.getBackground() == confirmButton) {\r\n                        ((JButton) c).doClick();\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        unFreezeAllTradersButton.addActionListener(e -> {\r\n            for (Component unFreezeRequest : unFreezeRequestsContainer.getComponents()) {\r\n                for (Component c : ((JPanel) unFreezeRequest).getComponents()) {\r\n                    if (c instanceof JButton && c.getBackground() == confirmButton) {\r\n                        ((JButton) c).doClick();\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        freezeAllTradersButton.addActionListener(e -> {\r\n            for (Component freezeComponent : freezeTradersContainer.getComponents()) {\r\n                for (Component c : ((JPanel) freezeComponent).getComponents()) {\r\n                    if (c instanceof JButton && c.getBackground() == blue) {\r\n                        ((JButton) c).doClick();\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private void setupFreezeTitle(JPanel frozenTraderTitleContainer, String s) {\r\n        JLabel unFreezeRequestsTitle = new JLabel(s);\r\n        unFreezeRequestsTitle.setFont(this.regular.deriveFont(28f));\r\n        unFreezeRequestsTitle.setForeground(Color.WHITE);\r\n        unFreezeRequestsTitle.setHorizontalAlignment(JLabel.LEFT);\r\n        frozenTraderTitleContainer.add(unFreezeRequestsTitle);\r\n    }\r\n\r\n    private void setupItemRequestsHeader(GridBagConstraints gbc, JPanel itemRequests) {\r\n        itemRequestsHeader.setPreferredSize(new Dimension(1200, 25));\r\n        itemRequestsHeader.setBackground(bg);\r\n        itemRequestsHeader.setBorder(BorderFactory.createEmptyBorder(0, 25, 0, 80));\r\n        addItemRequestsHeader();\r\n        gbc.insets = new Insets(0, 0, 1, 0);\r\n        gbc.gridy = 1;\r\n        gbc.weighty = 0.1;\r\n        itemRequests.add(itemRequestsHeader, gbc);\r\n    }\r\n\r\n    private JButton makeDoAllButton(JPanel itemRequestsTitleContainer, String s, Color black) {\r\n        JButton acceptAllItemRequestsButton = new JButton(s);\r\n        acceptAllItemRequestsButton.setFont(this.boldItalic.deriveFont(20f));\r\n        acceptAllItemRequestsButton.setHorizontalAlignment(JButton.RIGHT);\r\n        acceptAllItemRequestsButton.setForeground(blue);\r\n        acceptAllItemRequestsButton.setBackground(black);\r\n        acceptAllItemRequestsButton.setOpaque(true);\r\n        acceptAllItemRequestsButton.setBorderPainted(false);\r\n        itemRequestsTitleContainer.add(acceptAllItemRequestsButton);\r\n        return acceptAllItemRequestsButton;\r\n    }\r\n\r\n    private void makeItemRequestsTitle(JPanel itemRequestsTitleContainer) {\r\n        JLabel itemRequestsTitle = new JLabel(\"Item Requests\");\r\n        itemRequestsTitle.setFont(this.regular.deriveFont(28f));\r\n        itemRequestsTitle.setForeground(Color.WHITE);\r\n        itemRequestsTitle.setHorizontalAlignment(JLabel.LEFT);\r\n        itemRequestsTitle.setBackground(Color.black);\r\n        itemRequestsTitle.setOpaque(true);\r\n        itemRequestsTitleContainer.add(itemRequestsTitle);\r\n    }\r\n\r\n    private JPanel makeItemRequestsTitleContainer() {\r\n        JPanel itemRequestsTitleContainer = new JPanel(new GridLayout(1, 2));\r\n        itemRequestsTitleContainer.setOpaque(false);\r\n        itemRequestsTitleContainer.setPreferredSize(new Dimension(1200, 50));\r\n        return itemRequestsTitleContainer;\r\n    }\r\n\r\n    private void addFreezeTradersHeader() {\r\n    }\r\n\r\n    private void addUnFreezeRequestsHeader() {\r\n    }\r\n\r\n    private void addItemRequestsHeader() {\r\n        JLabel name = new JLabel(\"Name\");\r\n        name.setFont(this.regular.deriveFont(20f));\r\n        name.setForeground(Color.WHITE);\r\n        name.setHorizontalAlignment(JLabel.LEFT);\r\n\r\n        JLabel item = new JLabel(\"Item\");\r\n        item.setFont(this.regular.deriveFont(20f));\r\n        item.setForeground(Color.WHITE);\r\n        item.setHorizontalAlignment(JLabel.LEFT);\r\n\r\n        JLabel itemDesc = new JLabel(\"    Item Description\");\r\n        itemDesc.setFont(this.regular.deriveFont(20f));\r\n        itemDesc.setForeground(Color.WHITE);\r\n        itemDesc.setHorizontalAlignment(JLabel.CENTER);\r\n\r\n        JLabel empty2 = new JLabel(\"\");\r\n        JLabel empty3 = new JLabel(\"\");\r\n\r\n        itemRequestsHeader.add(name);\r\n        itemRequestsHeader.add(item);\r\n        itemRequestsHeader.add(itemDesc);\r\n        itemRequestsHeader.add(empty2);\r\n        itemRequestsHeader.add(empty3);\r\n    }\r\n\r\n    private void getAllItemRequests() {\r\n        HashMap<String, List<String>> itemRequests = itemRequestManager.getAllItemRequests();\r\n        if (itemRequests.size() == 0) {\r\n            itemRequestsContainer = new JPanel();\r\n            itemRequestsContainer.setBackground(bg);\r\n            JLabel noItemsFound = new JLabel(\"<html><pre>No Item Requests Found</pre></html>\");\r\n            noItemsFound.setFont(regular.deriveFont(30f));\r\n            noItemsFound.setPreferredSize(new Dimension(1000, 275));\r\n            noItemsFound.setHorizontalAlignment(JLabel.CENTER);\r\n            noItemsFound.setVerticalAlignment(JLabel.CENTER);\r\n            noItemsFound.setForeground(gray);\r\n            itemRequestsContainer.add(noItemsFound);\r\n            return;\r\n        }\r\n        int numRows = 0;\r\n        for (String t : itemRequests.keySet())\r\n            numRows += itemRequests.get(t).size();\r\n        if (numRows < 4)\r\n            numRows = 4;\r\n        itemRequestsContainer = new JPanel(new GridLayout(numRows, 1));\r\n        itemRequestsContainer.setBackground(bg);\r\n        itemRequests.forEach((t, items) ->\r\n                items.forEach(item -> {\r\n                    try {\r\n                        JPanel itemRequestPanel = new JPanel(new GridLayout(1, 6, 10, 0));\r\n                        itemRequestPanel.setPreferredSize(new Dimension(1000, 75));\r\n                        itemRequestPanel.setBackground(bg);\r\n                        itemRequestPanel.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, gray));\r\n\r\n                        JLabel traderName = new JLabel(userQuery.getUsername(t));\r\n                        traderName.setFont(regular.deriveFont(20f));\r\n                        traderName.setForeground(Color.WHITE);\r\n                        traderName.setHorizontalAlignment(JLabel.LEFT);\r\n                        traderName.setBorder(BorderFactory.createEmptyBorder(0, 25, 0, 0));\r\n\r\n                        JLabel traderItemName = new JLabel(itemQuery.getName(item));\r\n                        traderItemName.setFont(regular.deriveFont(20f));\r\n                        traderItemName.setForeground(Color.WHITE);\r\n                        traderItemName.setHorizontalAlignment(JLabel.LEFT);\r\n\r\n                        JLabel traderItemDesc = new JLabel(itemQuery.getName(item));\r\n                        traderItemDesc.setFont(regular.deriveFont(15f));\r\n                        traderItemDesc.setForeground(Color.WHITE);\r\n                        traderItemDesc.setHorizontalAlignment(JLabel.CENTER);\r\n\r\n                        JButton acceptItemRequestButton = new JButton(\"Accept\");\r\n                        acceptItemRequestButton.setFont(bold.deriveFont(20f));\r\n                        acceptItemRequestButton.setForeground(Color.WHITE);\r\n                        acceptItemRequestButton.setBackground(confirmButton);\r\n                        acceptItemRequestButton.setOpaque(true);\r\n                        acceptItemRequestButton.setBorder(BorderFactory.createMatteBorder(15, 50, 15, 50, bg));\r\n\r\n                        JButton rejectItemRequestButton = new JButton(\"Reject\");\r\n                        rejectItemRequestButton.setFont(bold.deriveFont(20f));\r\n                        rejectItemRequestButton.setForeground(Color.WHITE);\r\n                        rejectItemRequestButton.setBackground(red);\r\n                        rejectItemRequestButton.setOpaque(true);\r\n                        rejectItemRequestButton.setBorder(BorderFactory.createMatteBorder(15, 50, 15, 50, bg));\r\n\r\n                        itemRequestPanel.add(traderName);\r\n                        itemRequestPanel.add(traderItemName);\r\n                        itemRequestPanel.add(traderItemDesc);\r\n                        itemRequestPanel.add(acceptItemRequestButton);\r\n                        itemRequestPanel.add(rejectItemRequestButton);\r\n                        itemRequestsContainer.add(itemRequestPanel);\r\n\r\n                        acceptItemRequestButton.addActionListener(e -> {\r\n                            try {\r\n                                itemRequestManager.processItemRequest(t, item, true);\r\n                                itemRequestsContainer.remove(itemRequestPanel);\r\n                                itemRequestsContainer.revalidate();\r\n                                itemRequestsContainer.repaint();\r\n                            } catch (TradableItemNotFoundException | UserNotFoundException | AuthorizationException e1) {\r\n                                e1.printStackTrace();\r\n                            }\r\n                        });\r\n\r\n                        rejectItemRequestButton.addActionListener(e -> {\r\n                            try {\r\n                                itemRequestManager.processItemRequest(t, item, false);\r\n                                itemRequestsContainer.remove(itemRequestPanel);\r\n                                itemRequestsContainer.revalidate();\r\n                                itemRequestsContainer.repaint();\r\n                            } catch (TradableItemNotFoundException | UserNotFoundException | AuthorizationException e1) {\r\n                                e1.printStackTrace();\r\n                            }\r\n                        });\r\n                    } catch (TradableItemNotFoundException | UserNotFoundException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                })\r\n        );\r\n    }\r\n\r\n    private void getAllUnFreezeRequests() {\r\n        List<String> unFreezeRequests = frozenManager.getAllUnfreezeRequests();\r\n        if (unFreezeRequests.size() == 0) {\r\n            unFreezeRequestsContainer = new JPanel();\r\n            unFreezeRequestsContainer.setBackground(bg);\r\n            JLabel noTradersFound = new JLabel(\"<html><pre>No Requests Found</pre></html>\");\r\n            noTradersFound.setFont(regular.deriveFont(30f));\r\n            noTradersFound.setPreferredSize(new Dimension(400, 275));\r\n            noTradersFound.setHorizontalAlignment(JLabel.CENTER);\r\n            noTradersFound.setVerticalAlignment(JLabel.CENTER);\r\n            noTradersFound.setForeground(gray);\r\n            unFreezeRequestsContainer.add(noTradersFound);\r\n            unFreezeRequestsHeader.setVisible(false);\r\n            return;\r\n        }\r\n        int numRows = unFreezeRequests.size();\r\n        if (numRows < 4)\r\n            numRows = 4;\r\n        unFreezeRequestsContainer = new JPanel(new GridLayout(numRows, 1));\r\n        unFreezeRequestsContainer.setBackground(bg);\r\n        unFreezeRequests.forEach(user -> {\r\n            JPanel unFreezeRequestsPanel = new JPanel(new GridLayout(1, 3, 10, 0));\r\n            unFreezeRequestsPanel.setPreferredSize(new Dimension(400, 75));\r\n            unFreezeRequestsPanel.setBackground(bg);\r\n            unFreezeRequestsPanel.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, gray));\r\n\r\n            JLabel traderName = null;\r\n            try {\r\n                traderName = new JLabel(userQuery.getUsername(user));\r\n                traderName.setFont(regular.deriveFont(20f));\r\n                traderName.setForeground(Color.WHITE);\r\n                traderName.setHorizontalAlignment(JLabel.LEFT);\r\n                traderName.setBorder(BorderFactory.createEmptyBorder(0, 25, 0, 0));\r\n            } catch (UserNotFoundException e) {\r\n                e.printStackTrace();\r\n            }\r\n\r\n            JButton acceptUnFreezeRequestButton = new JButton(\"Un-Freeze\");\r\n            acceptUnFreezeRequestButton.setFont(bold.deriveFont(20f));\r\n            acceptUnFreezeRequestButton.setForeground(Color.WHITE);\r\n            acceptUnFreezeRequestButton.setBackground(confirmButton);\r\n            acceptUnFreezeRequestButton.setOpaque(true);\r\n            acceptUnFreezeRequestButton.setBorder(BorderFactory.createMatteBorder(15, 30, 15, 30, bg));\r\n\r\n            JButton rejectUnFreezeRequestButton = new JButton(\"Reject\");\r\n            rejectUnFreezeRequestButton.setFont(bold.deriveFont(20f));\r\n            rejectUnFreezeRequestButton.setForeground(Color.WHITE);\r\n            rejectUnFreezeRequestButton.setBackground(red);\r\n            rejectUnFreezeRequestButton.setOpaque(true);\r\n            rejectUnFreezeRequestButton.setBorder(BorderFactory.createMatteBorder(15, 30, 15, 30, bg));\r\n\r\n            unFreezeRequestsPanel.add(traderName);\r\n            unFreezeRequestsPanel.add(acceptUnFreezeRequestButton);\r\n            unFreezeRequestsPanel.add(rejectUnFreezeRequestButton);\r\n            unFreezeRequestsContainer.add(unFreezeRequestsPanel);\r\n\r\n            acceptUnFreezeRequestButton.addActionListener(e -> {\r\n                try {\r\n                    frozenManager.setFrozen(user, false);\r\n                    unFreezeRequestsContainer.remove(unFreezeRequestsPanel);\r\n                    unFreezeRequestsContainer.revalidate();\r\n                    unFreezeRequestsContainer.repaint();\r\n                } catch (UserNotFoundException e1) {\r\n                    e1.printStackTrace();\r\n                }\r\n            });\r\n\r\n            rejectUnFreezeRequestButton.addActionListener(e -> {\r\n                unFreezeRequestsContainer.remove(unFreezeRequestsPanel);\r\n                unFreezeRequestsContainer.revalidate();\r\n                unFreezeRequestsContainer.repaint();\r\n\r\n            });\r\n        });\r\n    }\r\n\r\n    private void getAllToBeFrozenUsers() {\r\n        List<String> tobeFrozenList = frozenManager.getShouldBeFrozen();\r\n        if (tobeFrozenList.size() == 0) {\r\n            freezeTradersContainer = new JPanel();\r\n            freezeTradersContainer.setBackground(bg);\r\n            JLabel noTradersFound = new JLabel(\"<html><pre>No Traders to freeze</pre></html>\");\r\n            noTradersFound.setFont(regular.deriveFont(30f));\r\n            noTradersFound.setPreferredSize(new Dimension(400, 275));\r\n            noTradersFound.setHorizontalAlignment(JLabel.CENTER);\r\n            noTradersFound.setVerticalAlignment(JLabel.CENTER);\r\n            noTradersFound.setForeground(gray);\r\n            freezeTradersContainer.add(noTradersFound);\r\n            freezeTradersHeader.setVisible(false);\r\n            return;\r\n        }\r\n        int numRows = tobeFrozenList.size();\r\n        if (numRows < 4)\r\n            numRows = 4;\r\n        freezeTradersContainer = new JPanel(new GridLayout(numRows, 1));\r\n        freezeTradersContainer.setBackground(bg);\r\n        tobeFrozenList.forEach(trader -> {\r\n            JPanel freezeTraderPanel = new JPanel(new GridLayout(1, 2));\r\n            freezeTraderPanel.setPreferredSize(new Dimension(400, 75));\r\n            freezeTraderPanel.setBackground(bg);\r\n            freezeTraderPanel.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, gray));\r\n\r\n            JLabel traderName = null;\r\n            try {\r\n                traderName = new JLabel(userQuery.getUsername(trader));\r\n                traderName.setFont(regular.deriveFont(20f));\r\n                traderName.setForeground(Color.WHITE);\r\n                traderName.setHorizontalAlignment(JLabel.LEFT);\r\n                traderName.setBorder(BorderFactory.createEmptyBorder(0, 25, 0, 0));\r\n            } catch (UserNotFoundException e) {\r\n                e.printStackTrace();\r\n            }\r\n\r\n            JButton freezeTraderButton = new JButton(\"FREEZE\");\r\n            freezeTraderButton.setFont(boldItalic.deriveFont(20f));\r\n            freezeTraderButton.setForeground(Color.WHITE);\r\n            freezeTraderButton.setBackground(blue);\r\n            freezeTraderButton.setOpaque(true);\r\n            freezeTraderButton.setBorder(BorderFactory.createMatteBorder(15, 30, 15, 30, bg));\r\n\r\n            freezeTraderPanel.add(traderName);\r\n            freezeTraderPanel.add(freezeTraderButton);\r\n            freezeTradersContainer.add(freezeTraderPanel);\r\n\r\n            freezeTraderButton.addActionListener(e -> {\r\n                try {\r\n                    frozenManager.setFrozen(trader, true);\r\n                    freezeTradersContainer.remove(freezeTraderPanel);\r\n                    freezeTradersContainer.revalidate();\r\n                    freezeTradersContainer.repaint();\r\n                } catch (UserNotFoundException e1) {\r\n                    e1.printStackTrace();\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/frontend/panels/admin_panel/admin_subpanels/OverviewPanel.java	(revision 1209968d06e7a5bf9afb04bbc3ea9e48a823bc51)
+++ src/frontend/panels/admin_panel/admin_subpanels/OverviewPanel.java	(date 1596862269120)
@@ -161,33 +161,36 @@
 
     private void handleButtonPress(JButton acceptAllItemRequestsButton, JButton unFreezeAllTradersButton, JButton freezeAllTradersButton) {
         acceptAllItemRequestsButton.addActionListener(e -> {
-            for (Component itemRequest : itemRequestsContainer.getComponents()) {
-                for (Component c : ((JPanel) itemRequest).getComponents()) {
-                    if (c instanceof JButton && c.getBackground() == confirmButton) {
-                        ((JButton) c).doClick();
-                    }
-                }
-            }
+            // for (Component itemRequest : itemRequestsContainer.getComponents()) {
+            //     for (Component c : ((JPanel) itemRequest).getComponents()) {
+            //         if (c instanceof JButton && c.getBackground() == confirmButton) {
+            //             ((JButton) c).doClick();
+            //         }
+            //     }
+            // }
+            itemRequestManager.acceptAllItemRequests();
         });
 
         unFreezeAllTradersButton.addActionListener(e -> {
-            for (Component unFreezeRequest : unFreezeRequestsContainer.getComponents()) {
-                for (Component c : ((JPanel) unFreezeRequest).getComponents()) {
-                    if (c instanceof JButton && c.getBackground() == confirmButton) {
-                        ((JButton) c).doClick();
-                    }
-                }
-            }
+            // for (Component unFreezeRequest : unFreezeRequestsContainer.getComponents()) {
+            //     for (Component c : ((JPanel) unFreezeRequest).getComponents()) {
+            //         if (c instanceof JButton && c.getBackground() == confirmButton) {
+            //             ((JButton) c).doClick();
+            //         }
+            //     }
+            // }
+            frozenManager.unfreezeAllFromRequests();
         });
 
         freezeAllTradersButton.addActionListener(e -> {
-            for (Component freezeComponent : freezeTradersContainer.getComponents()) {
-                for (Component c : ((JPanel) freezeComponent).getComponents()) {
-                    if (c instanceof JButton && c.getBackground() == blue) {
-                        ((JButton) c).doClick();
-                    }
-                }
-            }
+            // for (Component freezeComponent : freezeTradersContainer.getComponents()) {
+            //     for (Component c : ((JPanel) freezeComponent).getComponents()) {
+            //         if (c instanceof JButton && c.getBackground() == blue) {
+            //             ((JButton) c).doClick();
+            //         }
+            //     }
+            // }
+            frozenManager.freezeAllShouldBeFrozen();
         });
     }
 
Index: src/backend/tradesystem/general_managers/LoginManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package backend.tradesystem.general_managers;\r\n\r\n\r\nimport backend.DatabaseFilePaths;\r\nimport backend.exceptions.*;\r\nimport backend.models.Trade;\r\nimport backend.models.users.Admin;\r\nimport backend.models.users.Trader;\r\nimport backend.models.users.User;\r\nimport backend.tradesystem.Manager;\r\nimport backend.tradesystem.TraderProperties;\r\nimport backend.tradesystem.UserTypes;\r\n\r\nimport java.io.*;\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\nimport java.util.Properties;\r\nimport java.util.Set;\r\n\r\n/**\r\n * Used for logging in and registering, as well as any setup like changing global settings\r\n */\r\npublic class LoginManager extends Manager {\r\n\r\n    private final String TRADER_PROPERTY_FILE_PATH;\r\n\r\n    /**\r\n     * Initialize the objects to get items from databases\r\n     *\r\n     * @throws IOException if something goes wrong with getting database\r\n     */\r\n    public LoginManager() throws IOException {\r\n        super();\r\n        TRADER_PROPERTY_FILE_PATH = DatabaseFilePaths.TRADER_CONFIG.getFilePath();\r\n    }\r\n\r\n\r\n    /**\r\n     * Registers a user\r\n     *\r\n     * @param username username of new user\r\n     * @param password password of new user\r\n     * @param type     the type of user\r\n     * @return The ID of the newly created user\r\n     * @throws UserAlreadyExistsException username is not unique\r\n     * @throws BadPasswordException       password isn't valid\r\n     * @throws IOException                issues with getting database files\r\n     */\r\n    public String registerUser(String username, String password, UserTypes type) throws UserAlreadyExistsException, BadPasswordException, IOException {\r\n\r\n\r\n        validatePassword(password);\r\n\r\n        if (!isUsernameUnique(username))\r\n            throw new UserAlreadyExistsException();\r\n        switch (type) {\r\n            case ADMIN:\r\n                Admin admin = new Admin(username, password);\r\n                for (String userId : getAllUsers()) {\r\n                    try {\r\n                        if (getUser(userId) instanceof Admin) {\r\n                            admin.setReports(((Admin) getUser(userId)).getReports());\r\n                            break;\r\n                        }\r\n                    } catch (UserNotFoundException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n                return updateUserDatabase(admin).getId();\r\n            case TRADER:\r\n                tryToRefreshTradeCount();\r\n            default:\r\n                // Get current default limits\r\n                int defaultTradeLimit = getProperty(TraderProperties.TRADE_LIMIT);\r\n                int defaultIncompleteTradeLim = getProperty(TraderProperties.INCOMPLETE_TRADE_LIM);\r\n                int defaultMinimumAmountNeededToBorrow = getProperty(TraderProperties.MINIMUM_AMOUNT_NEEDED_TO_BORROW);\r\n                return updateUserDatabase(new Trader(username, password, \"\", defaultTradeLimit, defaultIncompleteTradeLim,\r\n                        defaultMinimumAmountNeededToBorrow)).getId();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Ensuring user credentials is correct and returns the user id\r\n     *\r\n     * @param username username of user\r\n     * @param password password of user\r\n     * @return the user id of the logged in user\r\n     * @throws IOException           issues with getting database files\r\n     * @throws UserNotFoundException could not find the user\r\n     */\r\n    public String login(String username, String password) throws UserNotFoundException, IOException {\r\n        String userId = getUserByUsername(username);\r\n        User user = getUser(userId);\r\n        if (!user.getPassword().equals(password)) throw new UserNotFoundException();\r\n        if (getType(user.getId()).equals(UserTypes.TRADER)) {\r\n            try {\r\n                tryToRefreshTradeCount();\r\n            } catch (IOException ex) {\r\n                System.out.println(\"Couldn't reset trade limits\");\r\n            }\r\n        }\r\n        return user.getId();\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Checks if the username exists in the database file\r\n     *\r\n     * @param username username to check for\r\n     * @return if username is unique\r\n     */\r\n    public boolean isUsernameUnique(String username) {\r\n        try {\r\n            getUserByUsername(username);\r\n            return false;\r\n        } catch (UserNotFoundException ignored) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Get the type of user\r\n     *\r\n     * @param userId the user id\r\n     * @return the user type of the user\r\n     * @throws UserNotFoundException if the user id wasn't found\r\n     */\r\n    public UserTypes getType(String userId) throws UserNotFoundException {\r\n        User user = getUser(userId);\r\n        if (user instanceof Admin)\r\n            return UserTypes.ADMIN;\r\n        else {\r\n            return UserTypes.TRADER;\r\n        }\r\n\r\n    }\r\n    /**\r\n     * Checks if password is valid\r\n     *\r\n     * @param password must have no white space, length greater than 11, has a capital letter, has a number\r\n     * @throws BadPasswordException if the password is not valid\r\n     */\r\n    private void validatePassword(String password) throws BadPasswordException {\r\n        if (password.contains(\" \")) throw new BadPasswordException(\"No white space allowed\");\r\n        if (password.length() < 11) throw new BadPasswordException(\"Length of password must be at least 12\");\r\n        if (password.toLowerCase().equals(password))\r\n            throw new BadPasswordException(\"Must have at least one capital letter\");\r\n        if (!password.matches(\".*[0-9]+.*\")) throw new BadPasswordException(\"Must contain at least one number\");\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Tries to refresh the trade count of all traders (this only happens every week).\r\n     */\r\n    private void tryToRefreshTradeCount() throws IOException {\r\n        Date date = new Date();\r\n\r\n        // Gets the current time in weeks since 1970.\r\n        int currTime = (int) (date.getTime() / (1000 * 60 * 60 * 24 * 7));\r\n\r\n        // Gets the last time (in weeks) the trade count of every user has been updated\r\n        int lastTime = getProperty(TraderProperties.LAST_TRADE_COUNT_UPDATE);\r\n\r\n        // If the time is different (i.e. one week has passed)...\r\n        if (lastTime - currTime != 0) {\r\n            // Refresh the trade count\r\n            refreshTradeCount();\r\n\r\n            // Set the new date that the trade count was updated to currTime.\r\n            setProperty(TraderProperties.LAST_TRADE_COUNT_UPDATE, currTime);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets the current value of the specified trader property\r\n     *\r\n     * @param propertyType the type of property\r\n     * @return the value of the specified trader property\r\n     * @throws IOException if the input file doesn't exist\r\n     */\r\n    public int getProperty(TraderProperties propertyType) throws IOException {\r\n        // get the file\r\n        File propertyFile = new File(TRADER_PROPERTY_FILE_PATH);\r\n        // initialize the reader of this file\r\n        FileReader reader = new FileReader(propertyFile);\r\n        // initialize properties object\r\n        Properties properties = new Properties();\r\n        // associate properties object with this file.\r\n        properties.load(reader);\r\n        // we're not going to use reader anymore, so close it\r\n        reader.close();\r\n        // return the integer value of that property\r\n        return Integer.parseInt(properties.getProperty(propertyType.getProperty()));\r\n    }\r\n\r\n    /**\r\n     * Sets the value of a property.\r\n     *\r\n     * @param propertyName  the property to change\r\n     * @param propertyValue the new value of that property\r\n     * @throws IOException if the file doesn't exist\r\n     */\r\n    public void setProperty(TraderProperties propertyName, int propertyValue) throws IOException {\r\n        // get the file\r\n        File propertyFile = new File(TRADER_PROPERTY_FILE_PATH);\r\n        // initialize reader\r\n        FileReader reader = new FileReader(propertyFile);\r\n        // initialize properties object (to set data)\r\n        Properties properties = new Properties();\r\n        // associate this properties object with the file\r\n        properties.load(reader);\r\n        // set the property\r\n        properties.setProperty(propertyName.getProperty(), \"\" + propertyValue);\r\n\r\n        //update the file\r\n        FileWriter writer = new FileWriter(propertyFile);\r\n        properties.store(writer, \"\");\r\n        reader.close();\r\n        writer.close();\r\n        updateAllTraderDefaults();\r\n    }\r\n    private void updateAllTraderDefaults() throws IOException {\r\n\r\n        int defaultTradeLimit = getProperty(TraderProperties.TRADE_LIMIT);\r\n        int defaultIncompleteTradeLim = getProperty(TraderProperties.INCOMPLETE_TRADE_LIM);\r\n        int defaultMinimumAmountNeededToBorrow = getProperty(TraderProperties.MINIMUM_AMOUNT_NEEDED_TO_BORROW);\r\n        Set<String> users = getAllUsers();\r\n\r\n        for (String user : users) {\r\n            User populatedUser = null;\r\n            try {\r\n                populatedUser = getUser(user);\r\n            } catch (UserNotFoundException e) {\r\n                e.printStackTrace();\r\n            }\r\n            if (populatedUser instanceof Trader) {\r\n                Trader t = (Trader) populatedUser;\r\n                t.setLimit(TraderProperties.TRADE_LIMIT, defaultTradeLimit);\r\n                t.setLimit(TraderProperties.INCOMPLETE_TRADE_LIM, defaultIncompleteTradeLim);\r\n                t.setLimit(TraderProperties.MINIMUM_AMOUNT_NEEDED_TO_BORROW, defaultMinimumAmountNeededToBorrow);\r\n            }\r\n            updateUserDatabase(populatedUser);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Refreshes the trade count of all the traders (sets the trade count to 0)\r\n     */\r\n    private void refreshTradeCount() {\r\n        Set<String> users = getAllUsers();\r\n        for (String id : users) {\r\n            Trader trader = null;\r\n            try {\r\n                trader = getTrader(id);\r\n                trader.setTradeCount(0);\r\n            }\r\n            catch (UserNotFoundException e){\r\n                e.printStackTrace();\r\n            } catch (AuthorizationException e){\r\n\r\n            }\r\n            updateUserDatabase(trader);\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/backend/tradesystem/general_managers/LoginManager.java	(revision 1209968d06e7a5bf9afb04bbc3ea9e48a823bc51)
+++ src/backend/tradesystem/general_managers/LoginManager.java	(date 1596862269117)
@@ -3,7 +3,6 @@
 
 import backend.DatabaseFilePaths;
 import backend.exceptions.*;
-import backend.models.Trade;
 import backend.models.users.Admin;
 import backend.models.users.Trader;
 import backend.models.users.User;
@@ -13,7 +12,6 @@
 
 import java.io.*;
 import java.util.Date;
-import java.util.HashMap;
 import java.util.Properties;
 import java.util.Set;
 
@@ -259,10 +257,8 @@
                 trader = getTrader(id);
                 trader.setTradeCount(0);
             }
-            catch (UserNotFoundException e){
+            catch (UserNotFoundException | AuthorizationException e) {
                 e.printStackTrace();
-            } catch (AuthorizationException e){
-
             }
             updateUserDatabase(trader);
         }
Index: src/frontend/WindowManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package frontend;\r\n\r\nimport backend.DatabaseFilePaths;\r\nimport backend.exceptions.AuthorizationException;\r\nimport backend.exceptions.TradableItemNotFoundException;\r\nimport backend.exceptions.TradeNotFoundException;\r\nimport backend.exceptions.UserNotFoundException;\r\nimport backend.tradesystem.UserTypes;\r\nimport backend.tradesystem.general_managers.LoginManager;\r\nimport frontend.panels.admin_panel.AdminPanel;\r\nimport frontend.panels.trader_panel.TraderPanel;\r\nimport frontend.panels.login_panel.LoginPanel;\r\n\r\nimport javax.imageio.ImageIO;\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.WindowAdapter;\r\nimport java.awt.event.WindowEvent;\r\nimport java.awt.image.BufferedImage;\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.Timer;\r\nimport java.util.TimerTask;\r\n\r\n/**\r\n * This is used to manage settings in the overall window itself\r\n * Code inspired from\r\n * https://stackoverflow.com/questions/54815226/how-can-i-detect-if-a-file-has-been-modified-using-lastmodified\r\n */\r\npublic class WindowManager extends JFrame {\r\n    protected Font regular, bold, italic, boldItalic;\r\n    private final LoginPanel loginPanel;\r\n    private JPanel userPanel = null;\r\n    private final BufferedImage loginBg = ImageIO.read(new File(\"./src/frontend/images/LoginPanelBg.jpg\")),\r\n            adminBg = ImageIO.read(new File(\"./src/frontend/images/IconAdmin.jpg\")),\r\n            traderBg = ImageIO.read(new File(\"./src/frontend/images/IconTrader.jpg\"));\r\n    private final LoginManager loginManager = new LoginManager();\r\n    private boolean infiltraded;\r\n\r\n    private String userId = \"bad\";\r\n\r\n    private String currentPanel = \"\";\r\n\r\n    /**\r\n     * This is where initial settings that affects the entire window is at\r\n     *\r\n     * @throws IOException         if logging causes issues\r\n     * @throws FontFormatException if the font is bad\r\n     */\r\n    public WindowManager() throws IOException, FontFormatException {\r\n        regular = Font.createFont(Font.TRUETYPE_FONT,\r\n                getClass().getResourceAsStream(\"./fonts/IBMPlexSans-Regular.ttf\"));\r\n        bold = Font.createFont(Font.TRUETYPE_FONT, getClass().getResourceAsStream(\"./fonts/IBMPlexSans-Bold.ttf\"));\r\n        italic = Font.createFont(Font.TRUETYPE_FONT, getClass().getResourceAsStream(\"./fonts/IBMPlexSans-Italic.ttf\"));\r\n        boldItalic = Font.createFont(Font.TRUETYPE_FONT,\r\n                getClass().getResourceAsStream(\"./fonts/IBMPlexSans-BoldItalic.ttf\"));\r\n        loginPanel = new LoginPanel(regular, bold, italic, boldItalic);\r\n\r\n        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n        this.setContentPane(new ImagePanel(loginBg));\r\n        this.add(loginPanel, BorderLayout.CENTER);\r\n        this.setSize(loginPanel.getSize());\r\n        this.setLocationRelativeTo(null);\r\n        this.setResizable(false);\r\n\r\n\r\n    }\r\n\r\n    public String getUserId() {\r\n        return userId;\r\n    }\r\n\r\n    /**\r\n     * Changes from login screen to the actual dashboard\r\n     *\r\n     * @param loggedInUserId the user id that is logged in\r\n     * @throws IOException            if login causes issues\r\n     * @throws TradeNotFoundException trade doesn't exist\r\n     */\r\n    public void login(String loggedInUserId) throws IOException, TradeNotFoundException {\r\n        try {\r\n            this.userId = loggedInUserId;\r\n            if (userId.equals(\"bad\")) return;\r\n            if (loggedInUserId.equals(\"\") || loginManager.getType(loggedInUserId).equals(UserTypes.TRADER)) {\r\n                userPanel = new TraderPanel(loggedInUserId, regular, bold, italic, boldItalic, infiltraded);\r\n                if(!this.currentPanel.equals(\"\"))\r\n                    ((TraderPanel) userPanel).setCurrentPanel(this.currentPanel);\r\n                this.setContentPane(new ImagePanel(traderBg));\r\n                this.setContentPane(new ImagePanel(traderBg));\r\n            } else {\r\n                userPanel = new AdminPanel(loggedInUserId, regular, bold, italic, boldItalic);\r\n                this.setContentPane(new ImagePanel(adminBg));\r\n            }\r\n            this.add(userPanel, BorderLayout.CENTER);\r\n            this.setSize(userPanel.getSize());\r\n        } catch (UserNotFoundException | AuthorizationException | TradableItemNotFoundException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Puts the window back on the login screen\r\n     */\r\n    public void logout() {\r\n        privateLogout();\r\n        this.userId = \"bad\";\r\n    }\r\n\r\n\r\n    private void privateLogout() {\r\n        this.currentPanel = ((TraderPanel) userPanel).getCurrentPanel();\r\n        if (userPanel != null)\r\n            this.remove(userPanel);\r\n        this.setContentPane(new ImagePanel(loginBg));\r\n        this.add(loginPanel, BorderLayout.CENTER);\r\n        this.setSize(loginPanel.getSize());\r\n    }\r\n\r\n    /**\r\n     * Sets the window to visible and refreshes the JFrame if needed\r\n     */\r\n    public void run() {\r\n        ArrayList<Long> times = new ArrayList<>();\r\n        ArrayList<File> file = new ArrayList<>();\r\n        int i = 0;\r\n        for (DatabaseFilePaths path : DatabaseFilePaths.values()) {\r\n            if (path.isConfig()) continue;\r\n            file.add(new File(path.getFilePath()));\r\n            times.add(file.get(i).lastModified());\r\n            i++;\r\n        }\r\n        Timer timer = new Timer();\r\n        timer.schedule(new TimerTask() {\r\n            @Override\r\n            public void run() {\r\n                if (userId.equals(\"bad\")) return;\r\n                for (int i = 0; i < times.size(); i++) {\r\n                    if (times.get(i) != file.get(i).lastModified()) {\r\n                        times.set(i, file.get(i).lastModified());\r\n                        try {\r\n                            if (!userId.equals(\"\")) {\r\n                                privateLogout();\r\n                                login(userId);\r\n                                break;\r\n                            }\r\n                        } catch (Exception e) {\r\n                            e.printStackTrace();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }, new Date(), 500);\r\n        addWindowListener(new WindowAdapter() {\r\n            @Override\r\n            public void windowClosing(WindowEvent ignored) {\r\n                timer.cancel();\r\n            }\r\n        });\r\n        this.setVisible(true);\r\n    }\r\n\r\n\r\n    private static class ImagePanel extends JComponent {\r\n        private final Image image;\r\n\r\n        public ImagePanel(Image image) {\r\n            this.image = image;\r\n        }\r\n\r\n\r\n        @Override\r\n        protected void paintComponent(Graphics g) {\r\n            super.paintComponent(g);\r\n            g.drawImage(image, 0, 0, this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets infiltraded to true (this WindowManager was created by an admin to infiltrade)\r\n     */\r\n    public void setInfiltraded() {\r\n        infiltraded = true;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/frontend/WindowManager.java	(revision 1209968d06e7a5bf9afb04bbc3ea9e48a823bc51)
+++ src/frontend/WindowManager.java	(date 1596862269118)
@@ -91,6 +91,8 @@
                 this.setContentPane(new ImagePanel(traderBg));
             } else {
                 userPanel = new AdminPanel(loggedInUserId, regular, bold, italic, boldItalic);
+                if (!this.currentPanel.equals(""))
+                    ((AdminPanel) userPanel).setCurrentPanel(this.currentPanel);
                 this.setContentPane(new ImagePanel(adminBg));
             }
             this.add(userPanel, BorderLayout.CENTER);
@@ -110,7 +112,8 @@
 
 
     private void privateLogout() {
-        this.currentPanel = ((TraderPanel) userPanel).getCurrentPanel();
+        this.currentPanel = userPanel instanceof TraderPanel ? ((TraderPanel) userPanel).getCurrentPanel() : ((AdminPanel) userPanel)
+                .getCurrentPanel();
         if (userPanel != null)
             this.remove(userPanel);
         this.setContentPane(new ImagePanel(loginBg));
Index: src/frontend/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package frontend;\r\n\r\nimport javax.swing.UIManager;\r\n\r\n/**\r\n * This is where the program starts running\r\n */\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        try {\r\n           new TemporarySetup();\r\n            UIManager.setLookAndFeel(UIManager.getCrossPlatformLookAndFeelClassName());\r\n            WindowManager windowManager = new WindowManager();\r\n            windowManager.run();\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/frontend/Main.java	(revision 1209968d06e7a5bf9afb04bbc3ea9e48a823bc51)
+++ src/frontend/Main.java	(date 1596862269118)
@@ -8,7 +8,7 @@
 public class Main {
     public static void main(String[] args) {
         try {
-           new TemporarySetup();
+        //    new TemporarySetup();
             UIManager.setLookAndFeel(UIManager.getCrossPlatformLookAndFeelClassName());
             WindowManager windowManager = new WindowManager();
             windowManager.run();
Index: src/backend/tradesystem/trader.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#\r\n#Sat Aug 08 00:25:42 EDT 2020\r\n=\\=\\=\\=\\=\\=\\=\r\nlastTradeCountUpdate=2640\r\ndefaultMinimumAmountNeededToBorrow=1\r\ndefaultTradeLimit=10\r\n>>>>>>>=15060fb201e35766b1fa2659187ba4b3cf64148f\r\n<<<<<<<=HEAD\r\ndefaultIncompleteTradeLim=3\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1252
===================================================================
--- src/backend/tradesystem/trader.properties	(revision 1209968d06e7a5bf9afb04bbc3ea9e48a823bc51)
+++ src/backend/tradesystem/trader.properties	(date 1596862269117)
@@ -1,5 +1,5 @@
 #
-#Sat Aug 08 00:25:42 EDT 2020
+#Sat Aug 08 00:41:38 EDT 2020
 =\=\=\=\=\=\=
 lastTradeCountUpdate=2640
 defaultMinimumAmountNeededToBorrow=1
Index: src/backend/databasefiles/tradableitems.ser
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>��\u0000\u0005sr\u0000\u0011java.util.HashMap\u0005\u0007���\u0016`�\u0003\u0000\u0002F\u0000\nloadFactorI\u0000\tthresholdxp?@\u0000\u0000\u0000\u0000\u0000`w\b\u0000\u0000\u0000�\u0000\u0000\u00002t\u0000$84d1a9e8-bbf8-4569-91c3-d54b994b581esr\u0000\u001Bbackend.models.TradableItem:�\"\u000Buˠ4\u0002\u0000\u0003L\u0000\u000BDESCRIPTIONt\u0000\u0012Ljava/lang/String;L\u0000\u0004NAMEq\u0000~\u0000\u0004L\u0000\u0002idq\u0000~\u0000\u0004xpt\u0000\rfrom oceania1t\u0000\u0005kiwi1q\u0000~\u0000\u0002t\u0000$a1c4c1d2-9a59-431d-b33b-b948ff2ce719sq\u0000~\u0000\u0003t\u0000\u0013bad desc requested7t\u0000\u0012another requested7q\u0000~\u0000\bt\u0000$8d1e2555-1e75-4193-9c09-ff33da6ee6f3sq\u0000~\u0000\u0003t\u0000\u0013bad desc requested0t\u0000\u0012another requested0q\u0000~\u0000\ft\u0000$ad071c92-1532-46bb-881a-e4566f4878d6sq\u0000~\u0000\u0003t\u0000\u000Bdisgusting4t\u0000\u000Bbanananana4q\u0000~\u0000\u0010t\u0000$579ed1a5-e4bc-4b45-be5f-c9b186756376sq\u0000~\u0000\u0003t\u0000\u0006sweet9t\u0000\u0006apple9q\u0000~\u0000\u0014t\u0000$732437a7-d205-44ae-91f1-1a8a1fb9397bsq\u0000~\u0000\u0003t\u0000\u000Bdisgusting8t\u0000\u000Bbanananana8q\u0000~\u0000\u0018t\u0000$afea5202-1a29-4651-94c2-5e51b8e21df3sq\u0000~\u0000\u0003t\u0000\rfrom oceania9t\u0000\u0005kiwi9q\u0000~\u0000\u001Ct\u0000$adee8bf8-184b-4615-88e1-b1f05f1039c1sq\u0000~\u0000\u0003t\u0000\u0006sweet3t\u0000\u0006apple3q\u0000~\u0000 t\u0000$355394ea-5080-456c-837c-587b497fcadesq\u0000~\u0000\u0003t\u0000\u0013bad desc requested8t\u0000\u0012another requested8q\u0000~\u0000$t\u0000$81940133-9c74-49ba-84f3-b4f41f3c448fsq\u0000~\u0000\u0003t\u0000\u000Frequested desc5t\u0000\nrequested5q\u0000~\u0000(t\u0000$fddbc7c3-782a-4517-9aa9-1825de1a4c9fsq\u0000~\u0000\u0003t\u0000\rfrom oceania3t\u0000\u0005kiwi3q\u0000~\u0000,t\u0000$71b62917-aa8d-4433-ac4a-757232bcbaf8sq\u0000~\u0000\u0003t\u0000\u0013bad desc requested6t\u0000\u0012another requested6q\u0000~\u00000t\u0000$48639528-9ead-49ef-95c6-7dd5eb257500sq\u0000~\u0000\u0003t\u0000\rfrom oceania0t\u0000\u0005kiwi0q\u0000~\u00004t\u0000$3f60fe30-4435-4d64-901a-e44c7493f08csq\u0000~\u0000\u0003t\u0000\u0013bad desc requested4t\u0000\u0012another requested4q\u0000~\u00008t\u0000$db1d5539-5476-481d-be48-39d60469f7e0sq\u0000~\u0000\u0003t\u0000\rfrom oceania8t\u0000\u0005kiwi8q\u0000~\u0000<t\u0000$02db6ddb-04e2-4809-a6f3-60b4098e83b8sq\u0000~\u0000\u0003t\u0000\u0013bad desc requested5t\u0000\u0012another requested5q\u0000~\u0000@t\u0000$2c7d5634-099d-431e-9277-b0c8dcc7287esq\u0000~\u0000\u0003t\u0000\u0006sweet4t\u0000\u0006apple4q\u0000~\u0000Dt\u0000$369f9826-6576-483d-9fb8-bb0a60db7e70sq\u0000~\u0000\u0003t\u0000\u000Frequested desc0t\u0000\nrequested0q\u0000~\u0000Ht\u0000$d530d7a8-8f2a-4ddc-8bdf-36bf8a45829fsq\u0000~\u0000\u0003t\u0000\u000Frequested desc6t\u0000\nrequested6q\u0000~\u0000Lt\u0000$5ea0882f-c64f-439b-85b2-179f41d7550dsq\u0000~\u0000\u0003t\u0000\u000Frequested desc4t\u0000\nrequested4q\u0000~\u0000Pt\u0000$9a28669e-2894-4adc-99dc-ce2bc285cfd3sq\u0000~\u0000\u0003t\u0000\u000Frequested desc9t\u0000\nrequested9q\u0000~\u0000Tt\u0000$50deb7a6-5606-46ea-8108-1dfde03c5fd6sq\u0000~\u0000\u0003t\u0000\u000Frequested desc7t\u0000\nrequested7q\u0000~\u0000Xt\u0000$94bde8b5-7729-4af2-b994-f9ab6b8aa82asq\u0000~\u0000\u0003t\u0000\u000Frequested desc2t\u0000\nrequested2q\u0000~\u0000\\t\u0000$cb20ea28-456f-4d7e-b755-9cf9e06eff7fsq\u0000~\u0000\u0003t\u0000\u0006sweet0t\u0000\u0006apple0q\u0000~\u0000`t\u0000$961565cb-6c9f-41ef-95e0-8d09cb56ebf6sq\u0000~\u0000\u0003t\u0000\u0013bad desc requested2t\u0000\u0012another requested2q\u0000~\u0000dt\u0000$aead3677-a7bb-49cb-9139-660ec7863bcesq\u0000~\u0000\u0003t\u0000\u0006sweet2t\u0000\u0006apple2q\u0000~\u0000ht\u0000$00636f44-943c-405e-af37-6aeab86b2baesq\u0000~\u0000\u0003t\u0000\u000Bdisgusting5t\u0000\u000Bbanananana5q\u0000~\u0000lt\u0000$02164d7e-ef59-4668-abfe-bf926972b620sq\u0000~\u0000\u0003t\u0000\u0006sweet1t\u0000\u0006apple1q\u0000~\u0000pt\u0000$ad706e10-c10a-4838-b10b-1a8f53c53424sq\u0000~\u0000\u0003t\u0000\rfrom oceania2t\u0000\u0005kiwi2q\u0000~\u0000tt\u0000$d26ba657-f6bd-4677-a215-ec9228be8c97sq\u0000~\u0000\u0003t\u0000\u0013bad desc requested3t\u0000\u0012another requested3q\u0000~\u0000xt\u0000$10d9f38b-3544-4dd0-8f0b-6ad0bc12ed45sq\u0000~\u0000\u0003t\u0000\u000Frequested desc3t\u0000\nrequested3q\u0000~\u0000|t\u0000$0c3f17d5-ad83-4d43-8baf-b635058f0adesq\u0000~\u0000\u0003t\u0000\u0013bad desc requested9t\u0000\u0012another requested9q\u0000~\u0000�t\u0000$2582c10f-0a2c-42bc-a0a1-0724a5a1577bsq\u0000~\u0000\u0003t\u0000\u000Bdisgusting3t\u0000\u000Bbanananana3q\u0000~\u0000�t\u0000$8781e0cf-37bf-44ec-a63f-1b8272c469ebsq\u0000~\u0000\u0003t\u0000\u0006sweet5t\u0000\u0006apple5q\u0000~\u0000�t\u0000$cc72d42d-d791-47fe-bf36-7a847f119722sq\u0000~\u0000\u0003t\u0000\u0006sweet8t\u0000\u0006apple8q\u0000~\u0000�t\u0000$103e6d99-5be3-40ca-95a2-08401a832f46sq\u0000~\u0000\u0003t\u0000\u000Bdisgusting9t\u0000\u000Bbanananana9q\u0000~\u0000�t\u0000$3d2d972e-41c5-4706-81cd-821df8ba5145sq\u0000~\u0000\u0003t\u0000\rfrom oceania5t\u0000\u0005kiwi5q\u0000~\u0000�t\u0000$32df3850-808c-461d-9333-edfdbb0bcc51sq\u0000~\u0000\u0003t\u0000\u000Bdisgusting0t\u0000\u000Bbanananana0q\u0000~\u0000�t\u0000$6220b907-9225-4640-91e6-14bce453c5a0sq\u0000~\u0000\u0003t\u0000\u000Bdisgusting2t\u0000\u000Bbanananana2q\u0000~\u0000�t\u0000$1ceb0de5-7739-4812-a26d-51067a863c17sq\u0000~\u0000\u0003t\u0000\u000Bdisgusting1t\u0000\u000Bbanananana1q\u0000~\u0000�t\u0000$3192ab82-352e-4edd-ade1-593e669a1ed5sq\u0000~\u0000\u0003t\u0000\rfrom oceania7t\u0000\u0005kiwi7q\u0000~\u0000�t\u0000$7bd41c23-ed0c-4930-a9b3-1dd4d9d1b203sq\u0000~\u0000\u0003t\u0000\rfrom oceania6t\u0000\u0005kiwi6q\u0000~\u0000�t\u0000$6b450beb-8fb0-4b03-8849-ec6cee3e3391sq\u0000~\u0000\u0003t\u0000\u0013bad desc requested1t\u0000\u0012another requested1q\u0000~\u0000�t\u0000$c1386020-3348-47f9-965a-81fa01839a41sq\u0000~\u0000\u0003t\u0000\u0006sweet7t\u0000\u0006apple7q\u0000~\u0000�t\u0000$e473b537-9ef2-4577-a74c-942d03652dc5sq\u0000~\u0000\u0003t\u0000\u0006sweet6t\u0000\u0006apple6q\u0000~\u0000�t\u0000$7ed3041a-4138-47bc-a2f0-450c8677696bsq\u0000~\u0000\u0003t\u0000\u000Frequested desc8t\u0000\nrequested8q\u0000~\u0000�t\u0000$6566b25b-38c7-4a82-bdb6-5cb852429f8dsq\u0000~\u0000\u0003t\u0000\rfrom oceania4t\u0000\u0005kiwi4q\u0000~\u0000�t\u0000$b9fb4961-d3e8-4893-830d-5034cc2e47aasq\u0000~\u0000\u0003t\u0000\u000Frequested desc1t\u0000\nrequested1q\u0000~\u0000�t\u0000$776fdf7d-032d-4c32-a77d-9492857d2d7dsq\u0000~\u0000\u0003t\u0000\u000Bdisgusting6t\u0000\u000Bbanananana6q\u0000~\u0000�t\u0000$25371e73-71da-40ba-9042-a1741cb0601csq\u0000~\u0000\u0003t\u0000\u000Bdisgusting7t\u0000\u000Bbanananana7q\u0000~\u0000�x
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/backend/databasefiles/tradableitems.ser	(revision 1209968d06e7a5bf9afb04bbc3ea9e48a823bc51)
+++ src/backend/databasefiles/tradableitems.ser	(date 1596862269041)
@@ -1,22 +1,22 @@
 �� sr java.util.HashMap���`� F 
-loadFactorI 	thresholdxp?@     `w   �   2t $84d1a9e8-bbf8-4569-91c3-d54b994b581esr backend.models.TradableItem:�"uˠ4 L DESCRIPTIONt Ljava/lang/String;L NAMEq ~ L idq ~ xpt 
-from oceania1t kiwi1q ~ t $a1c4c1d2-9a59-431d-b33b-b948ff2ce719sq ~ t bad desc requested7t another requested7q ~ t $8d1e2555-1e75-4193-9c09-ff33da6ee6f3sq ~ t bad desc requested0t another requested0q ~ t $ad071c92-1532-46bb-881a-e4566f4878d6sq ~ t disgusting4t banananana4q ~ t $579ed1a5-e4bc-4b45-be5f-c9b186756376sq ~ t sweet9t apple9q ~ t $732437a7-d205-44ae-91f1-1a8a1fb9397bsq ~ t disgusting8t banananana8q ~ t $afea5202-1a29-4651-94c2-5e51b8e21df3sq ~ t 
-from oceania9t kiwi9q ~ t $adee8bf8-184b-4615-88e1-b1f05f1039c1sq ~ t sweet3t apple3q ~  t $355394ea-5080-456c-837c-587b497fcadesq ~ t bad desc requested8t another requested8q ~ $t $81940133-9c74-49ba-84f3-b4f41f3c448fsq ~ t requested desc5t 
-requested5q ~ (t $fddbc7c3-782a-4517-9aa9-1825de1a4c9fsq ~ t 
-from oceania3t kiwi3q ~ ,t $71b62917-aa8d-4433-ac4a-757232bcbaf8sq ~ t bad desc requested6t another requested6q ~ 0t $48639528-9ead-49ef-95c6-7dd5eb257500sq ~ t 
-from oceania0t kiwi0q ~ 4t $3f60fe30-4435-4d64-901a-e44c7493f08csq ~ t bad desc requested4t another requested4q ~ 8t $db1d5539-5476-481d-be48-39d60469f7e0sq ~ t 
-from oceania8t kiwi8q ~ <t $02db6ddb-04e2-4809-a6f3-60b4098e83b8sq ~ t bad desc requested5t another requested5q ~ @t $2c7d5634-099d-431e-9277-b0c8dcc7287esq ~ t sweet4t apple4q ~ Dt $369f9826-6576-483d-9fb8-bb0a60db7e70sq ~ t requested desc0t 
-requested0q ~ Ht $d530d7a8-8f2a-4ddc-8bdf-36bf8a45829fsq ~ t requested desc6t 
-requested6q ~ Lt $5ea0882f-c64f-439b-85b2-179f41d7550dsq ~ t requested desc4t 
-requested4q ~ Pt $9a28669e-2894-4adc-99dc-ce2bc285cfd3sq ~ t requested desc9t 
-requested9q ~ Tt $50deb7a6-5606-46ea-8108-1dfde03c5fd6sq ~ t requested desc7t 
-requested7q ~ Xt $94bde8b5-7729-4af2-b994-f9ab6b8aa82asq ~ t requested desc2t 
-requested2q ~ \t $cb20ea28-456f-4d7e-b755-9cf9e06eff7fsq ~ t sweet0t apple0q ~ `t $961565cb-6c9f-41ef-95e0-8d09cb56ebf6sq ~ t bad desc requested2t another requested2q ~ dt $aead3677-a7bb-49cb-9139-660ec7863bcesq ~ t sweet2t apple2q ~ ht $00636f44-943c-405e-af37-6aeab86b2baesq ~ t disgusting5t banananana5q ~ lt $02164d7e-ef59-4668-abfe-bf926972b620sq ~ t sweet1t apple1q ~ pt $ad706e10-c10a-4838-b10b-1a8f53c53424sq ~ t 
-from oceania2t kiwi2q ~ tt $d26ba657-f6bd-4677-a215-ec9228be8c97sq ~ t bad desc requested3t another requested3q ~ xt $10d9f38b-3544-4dd0-8f0b-6ad0bc12ed45sq ~ t requested desc3t 
-requested3q ~ |t $0c3f17d5-ad83-4d43-8baf-b635058f0adesq ~ t bad desc requested9t another requested9q ~ �t $2582c10f-0a2c-42bc-a0a1-0724a5a1577bsq ~ t disgusting3t banananana3q ~ �t $8781e0cf-37bf-44ec-a63f-1b8272c469ebsq ~ t sweet5t apple5q ~ �t $cc72d42d-d791-47fe-bf36-7a847f119722sq ~ t sweet8t apple8q ~ �t $103e6d99-5be3-40ca-95a2-08401a832f46sq ~ t disgusting9t banananana9q ~ �t $3d2d972e-41c5-4706-81cd-821df8ba5145sq ~ t 
-from oceania5t kiwi5q ~ �t $32df3850-808c-461d-9333-edfdbb0bcc51sq ~ t disgusting0t banananana0q ~ �t $6220b907-9225-4640-91e6-14bce453c5a0sq ~ t disgusting2t banananana2q ~ �t $1ceb0de5-7739-4812-a26d-51067a863c17sq ~ t disgusting1t banananana1q ~ �t $3192ab82-352e-4edd-ade1-593e669a1ed5sq ~ t 
-from oceania7t kiwi7q ~ �t $7bd41c23-ed0c-4930-a9b3-1dd4d9d1b203sq ~ t 
-from oceania6t kiwi6q ~ �t $6b450beb-8fb0-4b03-8849-ec6cee3e3391sq ~ t bad desc requested1t another requested1q ~ �t $c1386020-3348-47f9-965a-81fa01839a41sq ~ t sweet7t apple7q ~ �t $e473b537-9ef2-4577-a74c-942d03652dc5sq ~ t sweet6t apple6q ~ �t $7ed3041a-4138-47bc-a2f0-450c8677696bsq ~ t requested desc8t 
-requested8q ~ �t $6566b25b-38c7-4a82-bdb6-5cb852429f8dsq ~ t 
-from oceania4t kiwi4q ~ �t $b9fb4961-d3e8-4893-830d-5034cc2e47aasq ~ t requested desc1t 
-requested1q ~ �t $776fdf7d-032d-4c32-a77d-9492857d2d7dsq ~ t disgusting6t banananana6q ~ �t $25371e73-71da-40ba-9042-a1741cb0601csq ~ t disgusting7t banananana7q ~ �x
\ No newline at end of file
+loadFactorI 	thresholdxp?@     `w   �   2t $ea3b8717-5021-417a-a8c0-bfaa62541e61sr backend.models.TradableItem:�"uˠ4 L DESCRIPTIONt Ljava/lang/String;L NAMEq ~ L idq ~ xpt bad desc requested9t another requested9q ~ t $6c13a40e-a392-4467-ac0e-caa191242808sq ~ t bad desc requested5t another requested5q ~ t $6f2c375a-f7b2-420f-bc3d-09de306d3d9bsq ~ t requested desc6t 
+requested6q ~ t $65389322-0309-4833-9e6c-125462e5a0d4sq ~ t requested desc0t 
+requested0q ~ t $d1a7aa1c-86af-466b-b72b-37953874df61sq ~ t 
+from oceania5t kiwi5q ~ t $9ff14687-babb-47c0-8009-d3c4fc2c4e2csq ~ t 
+from oceania6t kiwi6q ~ t $d75a8c52-cbf4-4c5b-a78b-f657ca700ed8sq ~ t disgusting6t banananana6q ~ t $666d8393-0984-4f1a-8fa1-1abe972f13dasq ~ t sweet8t apple8q ~  t $d0b95a77-6dcc-4849-89fe-e9f03142f210sq ~ t sweet2t apple2q ~ $t $e3f6072f-9e4c-42f6-8908-28027c57792fsq ~ t disgusting8t banananana8q ~ (t $f84460b3-a0bf-44d8-bff8-24edf3e8827asq ~ t disgusting9t banananana9q ~ ,t $ce251dd0-d301-435b-963c-5d25fde4acd1sq ~ t bad desc requested8t another requested8q ~ 0t $3822bafc-af10-4858-9113-881e6a002c42sq ~ t bad desc requested0t another requested0q ~ 4t $fcb25d96-d977-48f8-8f4f-06ac2d621fccsq ~ t 
+from oceania9t kiwi9q ~ 8t $5bd8b77a-01df-4860-8562-4f7a5835d5c1sq ~ t disgusting1t banananana1q ~ <t $32e58dfe-2efa-486d-ba54-cf86d5a7fe1dsq ~ t sweet9t apple9q ~ @t $5be2119a-ed35-45a9-b359-3cea4e23ed22sq ~ t 
+from oceania2t kiwi2q ~ Dt $fe972761-28a6-4b62-8e49-82bbee611437sq ~ t sweet1t apple1q ~ Ht $c27ed139-bf14-4b74-8793-2478708b8b6dsq ~ t bad desc requested7t another requested7q ~ Lt $35f09081-8040-4d2f-ba25-8f99ce094b1fsq ~ t sweet4t apple4q ~ Pt $6ef55ea0-c555-4e16-8407-0555eeae9cb8sq ~ t disgusting5t banananana5q ~ Tt $0f2b1dff-4b66-4452-96cb-128bd5a8f456sq ~ t requested desc9t 
+requested9q ~ Xt $d13f9655-4800-408d-a027-f0cd03d9295asq ~ t requested desc4t 
+requested4q ~ \t $c053ad7a-1800-4029-9e2c-11c413dc69b3sq ~ t requested desc7t 
+requested7q ~ `t $c09abad2-5dde-4d14-8305-96decca59a51sq ~ t disgusting2t banananana2q ~ dt $299c81dc-8671-40e6-9b48-45d5c96f723csq ~ t requested desc2t 
+requested2q ~ ht $5444f8a7-9d50-4da5-9583-4c543caf7dddsq ~ t bad desc requested2t another requested2q ~ lt $873687b3-fda1-4ff0-a12d-0de0158ff1d2sq ~ t 
+from oceania7t kiwi7q ~ pt $4fad7ac3-386a-47d5-8067-5d6e84e45a10sq ~ t 
+from oceania0t kiwi0q ~ tt $087ac5b3-7c52-4abb-b77b-1aed10899b71sq ~ t requested desc1t 
+requested1q ~ xt $984097b0-9e88-468f-817e-73daa19f52bdsq ~ t requested desc5t 
+requested5q ~ |t $b0397e9f-40b1-43c7-900b-d272d0265469sq ~ t requested desc3t 
+requested3q ~ �t $0d0c9055-2cb4-493f-8266-9cd9b2d4f604sq ~ t bad desc requested1t another requested1q ~ �t $313b7610-d3e8-4731-bf9d-a0751d0a6a86sq ~ t disgusting3t banananana3q ~ �t $8abe20a2-a37b-450a-8cae-3aeecf1b2e6csq ~ t bad desc requested3t another requested3q ~ �t $3c6ab76f-4174-47e9-a1cd-110447147764sq ~ t disgusting4t banananana4q ~ �t $37c3eeda-72e2-4adf-aa17-2bdae74c644esq ~ t bad desc requested4t another requested4q ~ �t $55aba3fe-e3ac-4663-8558-2102e71fd03bsq ~ t requested desc8t 
+requested8q ~ �t $86c0b583-a6f3-4a8f-a2f6-027cd2081f08sq ~ t sweet3t apple3q ~ �t $bff382ea-6840-4866-bed5-0bbc01c73de9sq ~ t disgusting0t banananana0q ~ �t $b648699b-50a9-4ca6-8b0d-ff6e90bb4274sq ~ t disgusting7t banananana7q ~ �t $91ca8899-5070-4b0e-8764-4cfb6da38965sq ~ t sweet5t apple5q ~ �t $e3faf622-dfff-4acb-af7e-db120a9f8474sq ~ t 
+from oceania1t kiwi1q ~ �t $9176aeb1-a2d1-45c9-8198-70b5f62a4b02sq ~ t bad desc requested6t another requested6q ~ �t $77c95306-b539-408e-a8d1-9c6aa70f7ef7sq ~ t sweet0t apple0q ~ �t $c16a88d6-58b8-4bf5-870f-78118c199e8asq ~ t 
+from oceania4t kiwi4q ~ �t $6755b854-a3db-422f-b80a-acacdd60dfb2sq ~ t sweet7t apple7q ~ �t $83a2bbb1-759f-4709-b186-6466fdcc082asq ~ t sweet6t apple6q ~ �t $f22a9029-684b-466e-8005-2ccae98fd02bsq ~ t 
+from oceania8t kiwi8q ~ �t $d4d23e6a-72dc-4ac3-86d5-2f8063c318f8sq ~ t 
+from oceania3t kiwi3q ~ �x
\ No newline at end of file
Index: src/backend/databasefiles/trades.ser
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>��\u0000\u0005sr\u0000\u0011java.util.HashMap\u0005\u0007���\u0016`�\u0003\u0000\u0002F\u0000\nloadFactorI\u0000\tthresholdxp?@\u0000\u0000\u0000\u0000\u0000\u0018w\b\u0000\u0000\u0000 \u0000\u0000\u0000\ft\u0000$c63122ab-5532-4d9e-ae91-66e12de4e8b1sr\u0000\u0014backend.models.Trade�@�P�Ó�\u0002\u0000\u0012I\u0000\u0015MAX_ALLOWED_NUM_EDITSZ\u0000\u001ChasFirstUserConfirmedRequestZ\u0000\u001DhasSecondUserConfirmedRequestZ\u0000\u0015isFirstUserConfirmed1Z\u0000\u0015isFirstUserConfirmed2Z\u0000\u0016isSecondUserConfirmed1Z\u0000\u0016isSecondUserConfirmed2I\u0000\bnumEditsL\u0000\rFIRST_USER_IDt\u0000\u0012Ljava/lang/String;L\u0000\u000ESECOND_USER_IDq\u0000~\u0000\u0004L\u0000\u000EfirstUserOfferq\u0000~\u0000\u0004L\u0000\u0002idq\u0000~\u0000\u0004L\u0000\u000FmeetingLocationq\u0000~\u0000\u0004L\u0000\u000BmeetingTimet\u0000\u0010Ljava/util/Date;L\u0000\u0007messageq\u0000~\u0000\u0004L\u0000\u0011secondMeetingTimeq\u0000~\u0000\u0005L\u0000\u000FsecondUserOfferq\u0000~\u0000\u0004L\u0000\u000EuserTurnToEditq\u0000~\u0000\u0004xp\u0000\u0000\u0000\u0006\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000t\u0000$2902be33-8952-4f74-981e-0d8a5a31bfeat\u0000$ac90aabc-79a0-44a3-b1f7-8cd3f7a34eb7t\u0000$ad706e10-c10a-4838-b10b-1a8f53c53424q\u0000~\u0000\u0002t\u0000\u000E123 bay streetsr\u0000\u000Ejava.util.Datehj�\u0001KYt\u0019\u0003\u0000\u0000xpw\b\u0000\u0000\u0001s�G\u001B�xt\u0000\u0014I give you my kiwi 2sq\u0000~\u0000\u000Bw\b\u0000\u0000\u0001t\u0007�\u0004�xt\u0000$3192ab82-352e-4edd-ade1-593e669a1ed5q\u0000~\u0000\bt\u0000$1322ea5a-495b-4fb8-80bc-a991c9983d2dsq\u0000~\u0000\u0003\u0000\u0000\u0000\u0006\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000t\u0000$3bde1745-a614-4fa2-9f2e-b8403fc72dbft\u0000$bf34f601-5f22-47e5-a03b-98cf09d0d898t\u0000$84d1a9e8-bbf8-4569-91c3-d54b994b581eq\u0000~\u0000\u0010t\u0000\u000E123 bay streetsq\u0000~\u0000\u000Bw\b\u0000\u0000\u0001s�G\u001B�xt\u0000\u0014I give you my kiwi 1sq\u0000~\u0000\u000Bw\b\u0000\u0000\u0001t\u0007�\u0004�xt\u0000$db1d5539-5476-481d-be48-39d60469f7e0q\u0000~\u0000\u0013t\u0000$c37dffff-6a78-4723-af27-6acb7b584b90sq\u0000~\u0000\u0003\u0000\u0000\u0000\u0006\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000t\u0000$518fe7b7-fab4-4bc5-ad23-30930cbf276ct\u0000$c72d1c57-caf3-42e0-802c-a56f68982bfft\u0000$6566b25b-38c7-4a82-bdb6-5cb852429f8dq\u0000~\u0000\u001At\u0000\u000E123 bay streetsq\u0000~\u0000\u000Bw\b\u0000\u0000\u0001s�G\u001B�xt\u0000\u0014I give you my kiwi 4sq\u0000~\u0000\u000Bw\b\u0000\u0000\u0001t\u0007�\u0004�xt\u0000$3d2d972e-41c5-4706-81cd-821df8ba5145q\u0000~\u0000\u001Dt\u0000$d653685d-ab2b-4c32-9222-18d445815d67sq\u0000~\u0000\u0003\u0000\u0000\u0000\u0006\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000t\u0000$518fe7b7-fab4-4bc5-ad23-30930cbf276ct\u0000$c72d1c57-caf3-42e0-802c-a56f68982bfft\u0000$ad071c92-1532-46bb-881a-e4566f4878d6q\u0000~\u0000$t\u0000\u000E123 bay streetsq\u0000~\u0000\u000Bw\b\u0000\u0000\u0001s�G\u001B�xt\u0000\u0015give me your banana 4pt\u0000$00636f44-943c-405e-af37-6aeab86b2baeq\u0000~\u0000't\u0000$66e419b8-b0c6-43b9-b72f-01da632c1d86sq\u0000~\u0000\u0003\u0000\u0000\u0000\u0006\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000t\u0000$3bde1745-a614-4fa2-9f2e-b8403fc72dbft\u0000$bf34f601-5f22-47e5-a03b-98cf09d0d898t\u0000$1ceb0de5-7739-4812-a26d-51067a863c17q\u0000~\u0000-t\u0000\u000E123 bay streetsq\u0000~\u0000\u000Bw\b\u0000\u0000\u0001s�G\u001B�xt\u0000\u0015give me your banana 1pt\u0000$732437a7-d205-44ae-91f1-1a8a1fb9397bq\u0000~\u00000t\u0000$12ea4dc5-3865-4176-94de-f1bdc5f6fed2sq\u0000~\u0000\u0003\u0000\u0000\u0000\u0006\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000t\u0000$2902be33-8952-4f74-981e-0d8a5a31bfeat\u0000$ac90aabc-79a0-44a3-b1f7-8cd3f7a34eb7t\u0000$6220b907-9225-4640-91e6-14bce453c5a0q\u0000~\u00006t\u0000\u000E123 bay streetsq\u0000~\u0000\u000Bw\b\u0000\u0000\u0001s�G\u001B�xt\u0000\u0015give me your banana 2pt\u0000$25371e73-71da-40ba-9042-a1741cb0601cq\u0000~\u00009t\u0000$bcec65cf-60e0-448a-b9bb-ce33e0e7d73dsq\u0000~\u0000\u0003\u0000\u0000\u0000\u0006\u0001\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0000t\u0000$3bde1745-a614-4fa2-9f2e-b8403fc72dbft\u0000$bf34f601-5f22-47e5-a03b-98cf09d0d898t\u0000$02164d7e-ef59-4668-abfe-bf926972b620t\u0000$bcec65cf-60e0-448a-b9bb-ce33e0e7d73dt\u0000\u000E123 bay streetsq\u0000~\u0000\u000Bw\b\u0000\u0000\u0001s�G\u001B�xt\u0000\u0014give me your apple 1sq\u0000~\u0000\u000Bw\b\u0000\u0000\u0001t\u0007�\u0004�xt\u0000$cc72d42d-d791-47fe-bf36-7a847f119722q\u0000~\u0000Bt\u0000$dffa7f6c-8741-4caa-8c97-ada1b9bf92f3sq\u0000~\u0000\u0003\u0000\u0000\u0000\u0006\u0001\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0000t\u0000$2902be33-8952-4f74-981e-0d8a5a31bfeat\u0000$ac90aabc-79a0-44a3-b1f7-8cd3f7a34eb7t\u0000$aead3677-a7bb-49cb-9139-660ec7863bcet\u0000$dffa7f6c-8741-4caa-8c97-ada1b9bf92f3t\u0000\u000E123 bay streetsq\u0000~\u0000\u000Bw\b\u0000\u0000\u0001s�G\u001B�xt\u0000\u0014give me your apple 2sq\u0000~\u0000\u000Bw\b\u0000\u0000\u0001t\u0007�\u0004�xt\u0000$c1386020-3348-47f9-965a-81fa01839a41q\u0000~\u0000Mt\u0000$0c9a4a64-b707-4fb4-bdaa-444237453ecasq\u0000~\u0000\u0003\u0000\u0000\u0000\u0006\u0001\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0000t\u0000$518fe7b7-fab4-4bc5-ad23-30930cbf276ct\u0000$c72d1c57-caf3-42e0-802c-a56f68982bfft\u0000$2c7d5634-099d-431e-9277-b0c8dcc7287et\u0000$0c9a4a64-b707-4fb4-bdaa-444237453ecat\u0000\u000E123 bay streetsq\u0000~\u0000\u000Bw\b\u0000\u0000\u0001s�G\u001B�xt\u0000\u0014give me your apple 4sq\u0000~\u0000\u000Bw\b\u0000\u0000\u0001t\u0007�\u0004�xt\u0000$8781e0cf-37bf-44ec-a63f-1b8272c469ebq\u0000~\u0000Xt\u0000$9aab0df0-65ce-4b9d-9973-53ade2dbb9dfsq\u0000~\u0000\u0003\u0000\u0000\u0000\u0006\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000t\u0000$c60905a4-4b34-440a-8444-89eb2e36034ct\u0000$c742a5cb-fafb-4347-b597-e451b6a0ee16t\u0000$fddbc7c3-782a-4517-9aa9-1825de1a4c9fq\u0000~\u0000`t\u0000\u000E123 bay streetsq\u0000~\u0000\u000Bw\b\u0000\u0000\u0001s�G\u001B�xt\u0000\u0014I give you my kiwi 3sq\u0000~\u0000\u000Bw\b\u0000\u0000\u0001t\u0007�\u0004�xt\u0000$7bd41c23-ed0c-4930-a9b3-1dd4d9d1b203q\u0000~\u0000ct\u0000$f61dc793-af67-4702-a17e-4625fc0a08c3sq\u0000~\u0000\u0003\u0000\u0000\u0000\u0006\u0001\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0000t\u0000$c60905a4-4b34-440a-8444-89eb2e36034ct\u0000$c742a5cb-fafb-4347-b597-e451b6a0ee16t\u0000$adee8bf8-184b-4615-88e1-b1f05f1039c1t\u0000$f61dc793-af67-4702-a17e-4625fc0a08c3t\u0000\u000E123 bay streetsq\u0000~\u0000\u000Bw\b\u0000\u0000\u0001s�G\u001B�xt\u0000\u0014give me your apple 3sq\u0000~\u0000\u000Bw\b\u0000\u0000\u0001t\u0007�\u0004�xt\u0000$e473b537-9ef2-4577-a74c-942d03652dc5q\u0000~\u0000mt\u0000$42ec2796-d0ca-4baa-9b97-c63bd6ea007esq\u0000~\u0000\u0003\u0000\u0000\u0000\u0006\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000t\u0000$c60905a4-4b34-440a-8444-89eb2e36034ct\u0000$c742a5cb-fafb-4347-b597-e451b6a0ee16t\u0000$2582c10f-0a2c-42bc-a0a1-0724a5a1577bq\u0000~\u0000ut\u0000\u000E123 bay streetsq\u0000~\u0000\u000Bw\b\u0000\u0000\u0001s�G\u001B�xt\u0000\u0015give me your banana 3pt\u0000$776fdf7d-032d-4c32-a77d-9492857d2d7dq\u0000~\u0000xx
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/backend/databasefiles/trades.ser	(revision 1209968d06e7a5bf9afb04bbc3ea9e48a823bc51)
+++ src/backend/databasefiles/trades.ser	(date 1596862269041)
@@ -1,3 +1,3 @@
 �� sr java.util.HashMap���`� F 
-loadFactorI 	thresholdxp?@     w       t $c63122ab-5532-4d9e-ae91-66e12de4e8b1sr backend.models.Trade�@�P�Ó� I MAX_ALLOWED_NUM_EDITSZ hasFirstUserConfirmedRequestZ hasSecondUserConfirmedRequestZ isFirstUserConfirmed1Z isFirstUserConfirmed2Z isSecondUserConfirmed1Z isSecondUserConfirmed2I numEditsL 
-FIRST_USER_IDt Ljava/lang/String;L SECOND_USER_IDq ~ L firstUserOfferq ~ L idq ~ L meetingLocationq ~ L meetingTimet Ljava/util/Date;L messageq ~ L secondMeetingTimeq ~ L secondUserOfferq ~ L userTurnToEditq ~ xp            t $2902be33-8952-4f74-981e-0d8a5a31bfeat $ac90aabc-79a0-44a3-b1f7-8cd3f7a34eb7t $ad706e10-c10a-4838-b10b-1a8f53c53424q ~ t 123 bay streetsr java.util.Datehj�KYt  xpw  s�G�xt I give you my kiwi 2sq ~ w  t��xt $3192ab82-352e-4edd-ade1-593e669a1ed5q ~ t $1322ea5a-495b-4fb8-80bc-a991c9983d2dsq ~             t $3bde1745-a614-4fa2-9f2e-b8403fc72dbft $bf34f601-5f22-47e5-a03b-98cf09d0d898t $84d1a9e8-bbf8-4569-91c3-d54b994b581eq ~ t 123 bay streetsq ~ w  s�G�xt I give you my kiwi 1sq ~ w  t��xt $db1d5539-5476-481d-be48-39d60469f7e0q ~ t $c37dffff-6a78-4723-af27-6acb7b584b90sq ~             t $518fe7b7-fab4-4bc5-ad23-30930cbf276ct $c72d1c57-caf3-42e0-802c-a56f68982bfft $6566b25b-38c7-4a82-bdb6-5cb852429f8dq ~ t 123 bay streetsq ~ w  s�G�xt I give you my kiwi 4sq ~ w  t��xt $3d2d972e-41c5-4706-81cd-821df8ba5145q ~ t $d653685d-ab2b-4c32-9222-18d445815d67sq ~             t $518fe7b7-fab4-4bc5-ad23-30930cbf276ct $c72d1c57-caf3-42e0-802c-a56f68982bfft $ad071c92-1532-46bb-881a-e4566f4878d6q ~ $t 123 bay streetsq ~ w  s�G�xt give me your banana 4pt $00636f44-943c-405e-af37-6aeab86b2baeq ~ 't $66e419b8-b0c6-43b9-b72f-01da632c1d86sq ~             t $3bde1745-a614-4fa2-9f2e-b8403fc72dbft $bf34f601-5f22-47e5-a03b-98cf09d0d898t $1ceb0de5-7739-4812-a26d-51067a863c17q ~ -t 123 bay streetsq ~ w  s�G�xt give me your banana 1pt $732437a7-d205-44ae-91f1-1a8a1fb9397bq ~ 0t $12ea4dc5-3865-4176-94de-f1bdc5f6fed2sq ~             t $2902be33-8952-4f74-981e-0d8a5a31bfeat $ac90aabc-79a0-44a3-b1f7-8cd3f7a34eb7t $6220b907-9225-4640-91e6-14bce453c5a0q ~ 6t 123 bay streetsq ~ w  s�G�xt give me your banana 2pt $25371e73-71da-40ba-9042-a1741cb0601cq ~ 9t $bcec65cf-60e0-448a-b9bb-ce33e0e7d73dsq ~         t $3bde1745-a614-4fa2-9f2e-b8403fc72dbft $bf34f601-5f22-47e5-a03b-98cf09d0d898t $02164d7e-ef59-4668-abfe-bf926972b620t $bcec65cf-60e0-448a-b9bb-ce33e0e7d73dt 123 bay streetsq ~ w  s�G�xt give me your apple 1sq ~ w  t��xt $cc72d42d-d791-47fe-bf36-7a847f119722q ~ Bt $dffa7f6c-8741-4caa-8c97-ada1b9bf92f3sq ~         t $2902be33-8952-4f74-981e-0d8a5a31bfeat $ac90aabc-79a0-44a3-b1f7-8cd3f7a34eb7t $aead3677-a7bb-49cb-9139-660ec7863bcet $dffa7f6c-8741-4caa-8c97-ada1b9bf92f3t 123 bay streetsq ~ w  s�G�xt give me your apple 2sq ~ w  t��xt $c1386020-3348-47f9-965a-81fa01839a41q ~ Mt $0c9a4a64-b707-4fb4-bdaa-444237453ecasq ~         t $518fe7b7-fab4-4bc5-ad23-30930cbf276ct $c72d1c57-caf3-42e0-802c-a56f68982bfft $2c7d5634-099d-431e-9277-b0c8dcc7287et $0c9a4a64-b707-4fb4-bdaa-444237453ecat 123 bay streetsq ~ w  s�G�xt give me your apple 4sq ~ w  t��xt $8781e0cf-37bf-44ec-a63f-1b8272c469ebq ~ Xt $9aab0df0-65ce-4b9d-9973-53ade2dbb9dfsq ~             t $c60905a4-4b34-440a-8444-89eb2e36034ct $c742a5cb-fafb-4347-b597-e451b6a0ee16t $fddbc7c3-782a-4517-9aa9-1825de1a4c9fq ~ `t 123 bay streetsq ~ w  s�G�xt I give you my kiwi 3sq ~ w  t��xt $7bd41c23-ed0c-4930-a9b3-1dd4d9d1b203q ~ ct $f61dc793-af67-4702-a17e-4625fc0a08c3sq ~         t $c60905a4-4b34-440a-8444-89eb2e36034ct $c742a5cb-fafb-4347-b597-e451b6a0ee16t $adee8bf8-184b-4615-88e1-b1f05f1039c1t $f61dc793-af67-4702-a17e-4625fc0a08c3t 123 bay streetsq ~ w  s�G�xt give me your apple 3sq ~ w  t��xt $e473b537-9ef2-4577-a74c-942d03652dc5q ~ mt $42ec2796-d0ca-4baa-9b97-c63bd6ea007esq ~             t $c60905a4-4b34-440a-8444-89eb2e36034ct $c742a5cb-fafb-4347-b597-e451b6a0ee16t $2582c10f-0a2c-42bc-a0a1-0724a5a1577bq ~ ut 123 bay streetsq ~ w  s�G�xt give me your banana 3pt $776fdf7d-032d-4c32-a77d-9492857d2d7dq ~ xx
\ No newline at end of file
+loadFactorI 	thresholdxp?@     w       t $bf0fe923-3855-4d51-9931-31cb9750a761sr backend.models.Trade�@�P�Ó� I MAX_ALLOWED_NUM_EDITSZ hasFirstUserConfirmedRequestZ hasSecondUserConfirmedRequestZ isFirstUserConfirmed1Z isFirstUserConfirmed2Z isSecondUserConfirmed1Z isSecondUserConfirmed2I numEditsL 
+FIRST_USER_IDt Ljava/lang/String;L SECOND_USER_IDq ~ L firstUserOfferq ~ L idq ~ L meetingLocationq ~ L meetingTimet Ljava/util/Date;L messageq ~ L secondMeetingTimeq ~ L secondUserOfferq ~ L userTurnToEditq ~ xp        t $7b2651e7-fc81-45ce-b3a3-32a826d82408t $9d4245ef-d89a-484c-b2d3-a885591050eft $fe972761-28a6-4b62-8e49-82bbee611437t $bf0fe923-3855-4d51-9931-31cb9750a761t 123 bay streetsr java.util.Datehj�KYt  xpw  s�U�0xt give me your apple 1sq ~ w  t��0xt $666d8393-0984-4f1a-8fa1-1abe972f13daq ~ t $9d680fa5-3452-4cad-b121-07015007c2e1sq ~             t $b38a9b88-48dd-4968-a4af-86ed21eba618t $628385e4-995b-42b1-88a1-e9abacdf03e9t $d4d23e6a-72dc-4ac3-86d5-2f8063c318f8q ~ t 123 bay streetsq ~ w  s�U�0xt I give you my kiwi 3sq ~ w  t��0xt $9ff14687-babb-47c0-8009-d3c4fc2c4e2cq ~ t $f88384a5-0659-49e8-bf0f-cca83fa07945sq ~         t $9960253a-4aa0-42ae-bc8b-9604b6b34b5et $a33a0740-64ae-4d0c-851a-2b59a6ba7ab7t $35f09081-8040-4d2f-ba25-8f99ce094b1ft $f88384a5-0659-49e8-bf0f-cca83fa07945t 123 bay streetsq ~ w  s�U�0xt give me your apple 4sq ~ w  t��0xt $91ca8899-5070-4b0e-8764-4cfb6da38965q ~ t $2dc8afa7-0fcc-4c9d-ac85-5d330e2c7324sq ~         t $52faa721-95db-4886-8df3-1239f93f5046t $f5139b7a-bc07-4e27-89f9-5b53b1de8be8t $d0b95a77-6dcc-4849-89fe-e9f03142f210t $2dc8afa7-0fcc-4c9d-ac85-5d330e2c7324t 123 bay streetsq ~ w  s�U�0xt give me your apple 2sq ~ w  t��0xt $6755b854-a3db-422f-b80a-acacdd60dfb2q ~ )t $2b42f1a1-0795-4f3d-bb5e-88e91296d219sq ~             t $b38a9b88-48dd-4968-a4af-86ed21eba618t $628385e4-995b-42b1-88a1-e9abacdf03e9t $313b7610-d3e8-4731-bf9d-a0751d0a6a86q ~ 1t 123 bay streetsq ~ w  s�U�0xt give me your banana 3pt $d75a8c52-cbf4-4c5b-a78b-f657ca700ed8q ~ 4t $9a0d5171-6d39-4235-a134-02d76ca9148fsq ~         t $b38a9b88-48dd-4968-a4af-86ed21eba618t $628385e4-995b-42b1-88a1-e9abacdf03e9t $86c0b583-a6f3-4a8f-a2f6-027cd2081f08t $9a0d5171-6d39-4235-a134-02d76ca9148ft 123 bay streetsq ~ w  s�U�0xt give me your apple 3sq ~ w  t��0xt $83a2bbb1-759f-4709-b186-6466fdcc082aq ~ =t $2df19d44-288b-4b33-80d9-af4fdd478843sq ~             t $9960253a-4aa0-42ae-bc8b-9604b6b34b5et $a33a0740-64ae-4d0c-851a-2b59a6ba7ab7t $3c6ab76f-4174-47e9-a1cd-110447147764q ~ Et 123 bay streetsq ~ w  s�U�0xt give me your banana 4pt $6ef55ea0-c555-4e16-8407-0555eeae9cb8q ~ Ht $e7b8eb51-798b-4ba8-b8a9-5cd72af0e0edsq ~             t $9960253a-4aa0-42ae-bc8b-9604b6b34b5et $a33a0740-64ae-4d0c-851a-2b59a6ba7ab7t $c16a88d6-58b8-4bf5-870f-78118c199e8aq ~ Nt 123 bay streetsq ~ w  s�U�0xt I give you my kiwi 4sq ~ w  t��0xt $d1a7aa1c-86af-466b-b72b-37953874df61q ~ Qt $e17fe011-985f-4f71-9538-973fca9ccbc6sq ~             t $52faa721-95db-4886-8df3-1239f93f5046t $f5139b7a-bc07-4e27-89f9-5b53b1de8be8t $c09abad2-5dde-4d14-8305-96decca59a51q ~ Xt 123 bay streetsq ~ w  s�U�0xt give me your banana 2pt $b648699b-50a9-4ca6-8b0d-ff6e90bb4274q ~ [t $59460d0b-ffe2-48fb-979c-68e9a6a71bb9sq ~             t $7b2651e7-fc81-45ce-b3a3-32a826d82408t $9d4245ef-d89a-484c-b2d3-a885591050eft $e3faf622-dfff-4acb-af7e-db120a9f8474q ~ at 123 bay streetsq ~ w  s�U�0xt I give you my kiwi 1sq ~ w  t��0xt $f22a9029-684b-466e-8005-2ccae98fd02bq ~ dt $83f98c95-890a-4257-a43f-9c4144fa99b9sq ~             t $52faa721-95db-4886-8df3-1239f93f5046t $f5139b7a-bc07-4e27-89f9-5b53b1de8be8t $5be2119a-ed35-45a9-b359-3cea4e23ed22q ~ kt 123 bay streetsq ~ w  s�U�0xt I give you my kiwi 2sq ~ w  t��0xt $873687b3-fda1-4ff0-a12d-0de0158ff1d2q ~ nt $0301e2f4-d54c-4008-88a5-ea9f3f170357sq ~             t $7b2651e7-fc81-45ce-b3a3-32a826d82408t $9d4245ef-d89a-484c-b2d3-a885591050eft $5bd8b77a-01df-4860-8562-4f7a5835d5c1q ~ ut 123 bay streetsq ~ w  s�U�0xt give me your banana 1pt $e3f6072f-9e4c-42f6-8908-28027c57792fq ~ xx
\ No newline at end of file
Index: src/frontend/panels/admin_panel/AdminPanel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package frontend.panels.admin_panel;\r\n\r\nimport javax.swing.*;\r\nimport javax.swing.plaf.metal.MetalButtonUI;\r\nimport java.awt.*;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\nimport java.io.IOException;\r\n\r\nimport backend.exceptions.UserNotFoundException;\r\nimport backend.tradesystem.queries.UserQuery;\r\nimport frontend.WindowManager;\r\nimport frontend.panels.admin_panel.admin_subpanels.ControlPanel;\r\nimport frontend.panels.admin_panel.admin_subpanels.OverviewPanel;\r\nimport frontend.panels.general_panels.MessagePanel;\r\nimport frontend.panels.general_panels.search_panels.SearchPanel;\r\n\r\n/**\r\n * This is used to represent what an admin account sees\r\n */\r\npublic class AdminPanel extends JPanel implements ActionListener {\r\n\r\n    private final JPanel menuContainer = new JPanel(new GridBagLayout()), menuPanelContainer = new JPanel();\r\n    private final JButton logoutButton = new JButton(\"Logout\");\r\n    private final CardLayout cardLayout = new CardLayout();\r\n\r\n\r\n    /**\r\n     * For making a new admin panel\r\n     *\r\n     * @param admin      the admin user id\r\n     * @param regular    regular font\r\n     * @param bold       bold font\r\n     * @param italic     italicized font\r\n     * @param boldItalic bold italics font\r\n     * @throws IOException           if access to database has issues\r\n     * @throws UserNotFoundException if the admin id is bad\r\n     */\r\n    public AdminPanel(String admin, Font regular, Font bold, Font italic, Font boldItalic) throws IOException, UserNotFoundException {\r\n        this.setSize(1600, 900);\r\n        this.setOpaque(false);\r\n        this.setLayout(new BorderLayout());\r\n        Color bg = new Color(51, 51, 51);\r\n        Color current = new Color(32, 32, 32);\r\n        Color gray = new Color(184, 184, 184);\r\n        Color red = new Color(219, 58, 52);\r\n        UserQuery userQuery = new UserQuery();\r\n        JPanel overviewPanel = new OverviewPanel(admin, regular, bold, italic, boldItalic);\r\n        JPanel searchPanel = new SearchPanel(admin, regular, bold, italic, boldItalic);\r\n        JPanel controlPanel = new ControlPanel(admin, regular, bold, italic, boldItalic);\r\n        MessagePanel messagePanel = new MessagePanel(admin, regular, bold, italic, boldItalic);\r\n\r\n        messagePanel.changeToAdminColorScheme();\r\n\r\n        searchPanel.setBackground(Color.BLACK);\r\n        menuContainer.setPreferredSize(new Dimension(250, this.getHeight()));\r\n        menuContainer.setOpaque(false);\r\n        GridBagConstraints gbc = setupGbc();\r\n        setupIconText(admin, boldItalic, userQuery, gbc);\r\n        setupUsernameTitle(admin, regular, userQuery, gbc);\r\n        setupUserIdTitle(admin, regular, gray, gbc);\r\n        setupOverviewPanelButton(regular, current, gbc);\r\n        setupPanelButton(regular, current, gbc, \"Control Panel\", 4);\r\n        setupPanelButton(regular, current, gbc, \"Messages\", 5);\r\n        setupPanelButton(regular, current, gbc, \"Search\", 6);\r\n\r\n        setupLogoutButton(boldItalic, red, gbc);\r\n        setupMenuPanelContainer(bg, overviewPanel, searchPanel, controlPanel, messagePanel);\r\n        this.add(menuContainer, BorderLayout.WEST);\r\n        this.add(menuPanelContainer, BorderLayout.CENTER);\r\n\r\n    }\r\n\r\n    private void setupMenuPanelContainer(Color bg, JPanel overviewPanel, JPanel searchPanel, JPanel controlPanel,\r\n            JPanel messagePanel) {\r\n        menuPanelContainer.setLayout(cardLayout);\r\n        menuPanelContainer.setBackground(bg);\r\n        menuPanelContainer.add(overviewPanel, \"Overview\");\r\n        menuPanelContainer.add(controlPanel, \"Control Panel\");\r\n        menuPanelContainer.add(messagePanel, \"Messages\");\r\n        menuPanelContainer.add(searchPanel, \"Search\");\r\n    }\r\n\r\n    private void setupLogoutButton(Font boldItalic, Color red, GridBagConstraints gbc) {\r\n        logoutButton.setFont(boldItalic.deriveFont(25f));\r\n        logoutButton.setForeground(Color.WHITE);\r\n        logoutButton.setBackground(red);\r\n        logoutButton.setOpaque(true);\r\n        logoutButton.setBorderPainted(false);\r\n        logoutButton.addActionListener(e ->\r\n                ((WindowManager) SwingUtilities.getWindowAncestor(this)).logout()\r\n        );\r\n        gbc.weighty = 0.1;\r\n        gbc.gridy = 7;\r\n        menuContainer.add(logoutButton, gbc);\r\n    }\r\n\r\n    private void setupPanelButton(Font regular, Color current, GridBagConstraints gbc, String s, int i) {\r\n        JButton controlPanelButton = new JButton(s);\r\n        controlPanelButton.setHorizontalAlignment(SwingConstants.LEFT);\r\n        controlPanelButton.setFont(regular.deriveFont(30f));\r\n        controlPanelButton.setForeground(Color.WHITE);\r\n        controlPanelButton.setBackground(current);\r\n        controlPanelButton.setOpaque(false);\r\n        controlPanelButton.setBorderPainted(false);\r\n        controlPanelButton.addActionListener(this);\r\n        gbc.gridy = i;\r\n        menuContainer.add(controlPanelButton, gbc);\r\n    }\r\n\r\n    private void setupOverviewPanelButton(Font regular, Color current, GridBagConstraints gbc) {\r\n        JButton overviewPanelButton = new JButton(\"Overview\");\r\n        overviewPanelButton.setHorizontalAlignment(SwingConstants.LEFT);\r\n        overviewPanelButton.setFont(regular.deriveFont(30f));\r\n        overviewPanelButton.setForeground(Color.WHITE);\r\n        overviewPanelButton.setBackground(current);\r\n        overviewPanelButton.setOpaque(true);\r\n        overviewPanelButton.setBorderPainted(false);\r\n        overviewPanelButton.addActionListener(this);\r\n        gbc.weighty = 0.14;\r\n        gbc.gridy = 3;\r\n        gbc.insets = new Insets(0, 0, 0, 0);\r\n        menuContainer.add(overviewPanelButton, gbc);\r\n    }\r\n\r\n    private void setupUserIdTitle(String admin, Font regular, Color gray, GridBagConstraints gbc) {\r\n        JLabel userIdTitle = new JLabel(\"<html><pre>ID: #\" + admin.substring(admin.length() - 12) + \"</pre></html>\");\r\n        userIdTitle.setFont(regular.deriveFont(20f));\r\n        userIdTitle.setForeground(gray);\r\n        userIdTitle.setHorizontalAlignment(JLabel.CENTER);\r\n        gbc.gridy = 2;\r\n        gbc.weighty = 0.01;\r\n        gbc.insets = new Insets(0, 0, 10, 0);\r\n        menuContainer.add(userIdTitle, gbc);\r\n    }\r\n\r\n    private void setupUsernameTitle(String admin, Font regular, UserQuery userQuery, GridBagConstraints gbc) throws UserNotFoundException {\r\n        JLabel usernameTitle = new JLabel((userQuery.getUsername(admin).length() > 12 ? userQuery.getUsername(admin).substring(0, 12) + \"...\"\r\n                : userQuery.getUsername(admin)));\r\n        usernameTitle.setFont(regular.deriveFont(35f));\r\n        usernameTitle.setForeground(Color.WHITE);\r\n        usernameTitle.setBorder(BorderFactory.createEmptyBorder(0, 10, 10, 0));\r\n        usernameTitle.setHorizontalAlignment(JLabel.CENTER);\r\n        gbc.weighty = 0.01;\r\n        gbc.gridy = 1;\r\n        menuContainer.add(usernameTitle, gbc);\r\n    }\r\n\r\n    private void setupIconText(String admin, Font boldItalic, UserQuery userQuery, GridBagConstraints gbc) throws UserNotFoundException {\r\n        JLabel iconText = new JLabel(userQuery.getUsername(admin).toUpperCase().substring(0, 1));\r\n        iconText.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));\r\n        iconText.setFont(boldItalic.deriveFont(55f));\r\n        iconText.setForeground(Color.WHITE);\r\n        iconText.setHorizontalAlignment(SwingConstants.CENTER);\r\n        menuContainer.add(iconText, gbc);\r\n    }\r\n\r\n    private GridBagConstraints setupGbc() {\r\n        GridBagConstraints gbc = new GridBagConstraints();\r\n        gbc.fill = GridBagConstraints.BOTH;\r\n        gbc.gridx = 0;\r\n        gbc.weightx = 1.0;\r\n        gbc.gridy = 0;\r\n        gbc.weighty = 0.16;\r\n        return gbc;\r\n    }\r\n\r\n    /**\r\n     * Used for handling events\r\n     *\r\n     * @param e the event\r\n     */\r\n    @Override\r\n    public void actionPerformed(ActionEvent e) {\r\n        cardLayout.show(menuPanelContainer, e.getActionCommand());\r\n        for (Component button : menuContainer.getComponents()) {\r\n            if (button instanceof JButton && !button.equals(logoutButton)) {\r\n                button.setEnabled(true);\r\n                ((JButton) button).setOpaque(false);\r\n            }\r\n        }\r\n        ((JButton) e.getSource()).setEnabled(false);\r\n        ((JButton) e.getSource()).setOpaque(true);\r\n        ((JButton) e.getSource()).setUI(new MetalButtonUI() {\r\n            protected Color getDisabledTextColor() {\r\n                return Color.WHITE;\r\n            }\r\n        });\r\n\r\n        menuContainer.repaint();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/frontend/panels/admin_panel/AdminPanel.java	(revision 1209968d06e7a5bf9afb04bbc3ea9e48a823bc51)
+++ src/frontend/panels/admin_panel/AdminPanel.java	(date 1596862269119)
@@ -24,6 +24,8 @@
     private final JButton logoutButton = new JButton("Logout");
     private final CardLayout cardLayout = new CardLayout();
 
+    private String currentPanel = "";
+
 
     /**
      * For making a new admin panel
@@ -71,6 +73,34 @@
 
     }
 
+    public String getCurrentPanel() {
+        return this.currentPanel;
+    }
+
+    public void setCurrentPanel(String panelName) {
+        this.currentPanel = panelName;
+        cardLayout.show(menuPanelContainer, panelName);
+
+        for (Component button : menuContainer.getComponents()) {
+            if (button instanceof JButton) {
+                if (!button.equals(logoutButton)) {
+                    button.setEnabled(true);
+                    ((JButton) button).setOpaque(false);
+                }
+                if (((JButton) button).getName().equals(panelName)) {
+                    ((JButton) button).setEnabled(false);
+                    ((JButton) button).setOpaque(true);
+                    ((JButton) button).setUI(new MetalButtonUI() {
+                        protected Color getDisabledTextColor() {
+                            return Color.WHITE;
+                        }
+                    });
+                }
+            }
+        }
+
+    }
+
     private void setupMenuPanelContainer(Color bg, JPanel overviewPanel, JPanel searchPanel, JPanel controlPanel,
             JPanel messagePanel) {
         menuPanelContainer.setLayout(cardLayout);
@@ -83,6 +113,7 @@
 
     private void setupLogoutButton(Font boldItalic, Color red, GridBagConstraints gbc) {
         logoutButton.setFont(boldItalic.deriveFont(25f));
+        logoutButton.setName("Logout");
         logoutButton.setForeground(Color.WHITE);
         logoutButton.setBackground(red);
         logoutButton.setOpaque(true);
@@ -96,21 +127,23 @@
     }
 
     private void setupPanelButton(Font regular, Color current, GridBagConstraints gbc, String s, int i) {
-        JButton controlPanelButton = new JButton(s);
-        controlPanelButton.setHorizontalAlignment(SwingConstants.LEFT);
-        controlPanelButton.setFont(regular.deriveFont(30f));
-        controlPanelButton.setForeground(Color.WHITE);
-        controlPanelButton.setBackground(current);
-        controlPanelButton.setOpaque(false);
-        controlPanelButton.setBorderPainted(false);
-        controlPanelButton.addActionListener(this);
+        JButton panelButton = new JButton(s);
+        panelButton.setHorizontalAlignment(SwingConstants.LEFT);
+        panelButton.setName(s);
+        panelButton.setFont(regular.deriveFont(30f));
+        panelButton.setForeground(Color.WHITE);
+        panelButton.setBackground(current);
+        panelButton.setOpaque(false);
+        panelButton.setBorderPainted(false);
+        panelButton.addActionListener(this);
         gbc.gridy = i;
-        menuContainer.add(controlPanelButton, gbc);
+        menuContainer.add(panelButton, gbc);
     }
 
     private void setupOverviewPanelButton(Font regular, Color current, GridBagConstraints gbc) {
         JButton overviewPanelButton = new JButton("Overview");
         overviewPanelButton.setHorizontalAlignment(SwingConstants.LEFT);
+        overviewPanelButton.setName("Overview");
         overviewPanelButton.setFont(regular.deriveFont(30f));
         overviewPanelButton.setForeground(Color.WHITE);
         overviewPanelButton.setBackground(current);
@@ -172,21 +205,7 @@
      */
     @Override
     public void actionPerformed(ActionEvent e) {
-        cardLayout.show(menuPanelContainer, e.getActionCommand());
-        for (Component button : menuContainer.getComponents()) {
-            if (button instanceof JButton && !button.equals(logoutButton)) {
-                button.setEnabled(true);
-                ((JButton) button).setOpaque(false);
-            }
-        }
-        ((JButton) e.getSource()).setEnabled(false);
-        ((JButton) e.getSource()).setOpaque(true);
-        ((JButton) e.getSource()).setUI(new MetalButtonUI() {
-            protected Color getDisabledTextColor() {
-                return Color.WHITE;
-            }
-        });
-
+        setCurrentPanel(e.getActionCommand());
         menuContainer.repaint();
     }
 }
\ No newline at end of file
